
==================== FINAL INTERFACE ====================
2019-03-25 22:09:49.878006481 UTC

interface project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an:Type 8063
  interface hash: a638e6fb22a61f88c89b7d08a4c427e3
  ABI hash: df59caa494a616a7b0857b7bb08caaa9
  export-list hash: ce00df076bf5945b2ec222b3a5119386
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7a242ffa3d761dff45aed995f1434522
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Type.changeCell
  Type.changeCellInField
  Type.changeCellInLine
  Type.createColorFigures
  Type.createCoordFigures
  Type.createField
  Type.createLine
  Type.createRotateModels
  Type.findCellCond
  Type.findCellCondLine
  Type.funFieldAll
  Type.funFieldAny
  Type.funLineAll
  Type.funLineAny
  Type.getCell
  Type.getCellColor
  Type.getCellLine
  Type.getCellType
  Type.higherCell
  Type.leftCell
  Type.lowerCell
  Type.mapField
  Type.mapLine
  Type.rightCell
  Type.typeCellFromField
  Type.Cell{Type.Cell cellColor cellType numCell numLine}
  Type.CoordCell
  Type.CoordFigures
  Type.Field
  Type.GameState{Type.GameState colorTetr coordTetr endGame gameField gameFigures gameRandomGen gameResult rotateTypeFigure}
  Type.Line
  Type.NumberFigure
  Type.Result
module dependencies: Constans
package dependencies: GLURaw-2.0.0.4 GLUT-2.7.0.14
                      ObjectName-1.1.0.1 OpenGL-3.0.2.2 OpenGLRaw-3.3.2.0
                      StateVar-1.1.1.1 array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      fixed-0.2.1.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 gloss-1.13.0.1
                      gloss-rendering-1.13.0.2 half-0.3 integer-gmp-1.0.2.0
                      pretty-1.1.3.6 random-1.1 stm-2.5.0.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2
orphans: stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic text-1.2.3.1:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type half-0.3:Numeric.Half
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:Debug.Trace 6e89d30f3850c77c707392fc46e9b589
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  gloss-1.13.0.1:Graphics.Gloss dc3d422d35cd32353ee5470deb98e8ac
import  -/  gloss-1.13.0.1:Graphics.Gloss.Data.Color 63b215a24677775cb457045312664a10
import  -/  gloss-rendering-1.13.0.2:Graphics.Gloss.Internals.Data.Color 2716426e7777628bb37f6a888abf7b9e
import  -/  Constans 2bd7c9d69811db52caca3e7a07dbac3a
  exports: 4e851395688f4e2271ad07b9b5734963
import  -/  random-1.1:System.Random 8c06dce30a9b8b4f2b7c15fb3f418e08
ce69d132984f15c162cb28e115878ea4
  $fShowCell :: GHC.Show.Show Type.Cell
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.Cell
                  Type.$fShowCell_$cshowsPrec
                  Type.$fShowCell_$cshow
                  Type.$fShowCell_$cshowList -}
ce69d132984f15c162cb28e115878ea4
  $fShowCell1 :: Type.Cell -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Type.Cell) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 Type.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
d8e6d5e0f8db6ef5ee9c6aeb73a3d5dc
  $fShowCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
8ad59cf5af88fd8f57a2ef5a695c862c
  $fShowCell3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cellColor = "#) -}
e49e0ccdf0a84b6ce8943a72a6af38a0
  $fShowCell4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cellType = "#) -}
eb5d715e84e24dad1d7c94909fa8802f
  $fShowCell5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("numCell = "#) -}
daa0311992e9455953b54fab7f9acff1
  $fShowCell6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("numLine = "#) -}
1917b37d06ebfc144ae979d926476a26
  $fShowCell7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cell {"#) -}
bc81885b428232c86b7e31da3cfb4af4
  $fShowCell8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
ce69d132984f15c162cb28e115878ea4
  $fShowCell_$cshow :: Type.Cell -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.Cell) ->
                 Type.$fShowCell_$cshowsPrec
                   Type.$fShowCell8
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ce69d132984f15c162cb28e115878ea4
  $fShowCell_$cshowList :: [Type.Cell] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.Cell]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.Cell Type.$fShowCell1 ls s) -}
ce69d132984f15c162cb28e115878ea4
  $fShowCell_$cshowsPrec ::
    GHC.Types.Int -> Type.Cell -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Type.Cell) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Type.Cell ww3 ww4 ww5 ww6 ->
                 Type.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  $fShowGameState :: GHC.Show.Show Type.GameState
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.GameState
                  Type.$fShowGameState_$cshowsPrec
                  Type.$fShowGameState_$cshow
                  Type.$fShowGameState_$cshowList -}
3c2a97b0bb2bff3c82c2e04143c99934
  $fShowGameState1 :: Type.GameState -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U,1*U(U))><L,U>,
     Unfolding: (\ (w :: Type.GameState) (w1 :: GHC.Base.String) ->
                 case w of ww { Type.GameState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Type.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 w1 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  $fShowGameState_$cshow :: Type.GameState -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.GameState) ->
                 Type.$fShowGameState_$cshowsPrec
                   Type.$fShowCell8
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3c2a97b0bb2bff3c82c2e04143c99934
  $fShowGameState_$cshowList :: [Type.GameState] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.GameState]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.GameState Type.$fShowGameState1 ls s) -}
3c2a97b0bb2bff3c82c2e04143c99934
  $fShowGameState_$cshowsPrec ::
    GHC.Types.Int -> Type.GameState -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U,1*U(U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Type.GameState)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Type.GameState ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 Type.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 w2 } }) -}
b66278e7125e440179bcfe20c31d9e4b
  $tc'Cell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2369569555503978646##
                   3546076993841330935##
                   Type.$trModule
                   Type.$tc'Cell2
                   0#
                   Type.$tc'Cell1) -}
100473571f6e16dac9c2aec217d466fb
  $tc'Cell1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f5fb5b6e976428d456ee74f97a28ed66
  $tc'Cell2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Cell3) -}
568d761bfdc1bb510f63d58688e7be8d
  $tc'Cell3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cell"#) -}
5d05ad53d9a8ac681c2f50c3eec38ebc
  $tc'GameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2100435522962800206##
                   8447633230906775044##
                   Type.$trModule
                   Type.$tc'GameState2
                   0#
                   Type.$tc'GameState1) -}
215e8f299b97b29c0e0ff9345bee5054
  $tc'GameState1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ac78d682b276088ab7445b253686add9
  $tc'GameState2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'GameState3) -}
0690df0421d192e46b417314398618b9
  $tc'GameState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GameState"#) -}
60fc49af8eb34866731fe044f980853f
  $tcCell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3801954717549597669##
                   5043836793025382721##
                   Type.$trModule
                   Type.$tcCell1
                   0#
                   GHC.Types.krep$*) -}
a4ff2483b7b9ee6506d3daa8c5e1ca63
  $tcCell1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcCell2) -}
8707212698cdb7ee998840e85686d133
  $tcCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cell"#) -}
cb472bbf602250c6caa9af558b1cb923
  $tcGameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11266966231570736974##
                   2925421039485752395##
                   Type.$trModule
                   Type.$tcGameState1
                   0#
                   GHC.Types.krep$*) -}
66bee296bcb19f01f2469cb74592e42f
  $tcGameState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcGameState2) -}
04682f0d06a53961aa666729403258d4
  $tcGameState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameState"#) -}
38d9520e039218707b0546bd013919d4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Type.$trModule3 Type.$trModule1) -}
10ee3b6e5d434b7a5b75b2219ce8981f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule2) -}
56e7f65effb97fbfb615a77f77674444
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
9df2574ede9cfe33891f96b5ebf49907
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule4) -}
b37ccd362537d441e3fb680d1eeb2f5b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an"#) -}
0a49351c21abf96884a1b7a83bd98ed9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Graphics.Gloss.Internals.Data.Color.Color
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,U(U)><L,U(U)><L,U(U)><L,1*U(U,U,U,U)>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Graphics.Gloss.Internals.Data.Color.Color) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww4 of ww5 { Graphics.Gloss.Internals.Data.Color.RGBA ww6 ww7 ww8 ww9 ->
                     Graphics.Gloss.Internals.Data.Color.$w$cshowsPrec
                       0#
                       ww6
                       ww7
                       ww8
                       ww9 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Type.$fShowCell7
                       (GHC.CString.unpackAppendCString#
                          Type.$fShowCell6
                          (case ww1 of ww5 { GHC.Types.I# ww6 ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  ww6
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Type.$fShowCell5
                                        (case ww2 of ww7 { GHC.Types.I# ww8 ->
                                         case GHC.Show.$wshowSignedInt
                                                0#
                                                ww8
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      Type.$fShowCell4
                                                      (case ww3 of ww9 { GHC.Types.I# ww10 ->
                                                       case GHC.Show.$wshowSignedInt
                                                              0#
                                                              ww10
                                                              (GHC.Base.++
                                                                 @ GHC.Types.Char
                                                                 GHC.Show.showCommaSpace1
                                                                 (GHC.CString.unpackAppendCString#
                                                                    Type.$fShowCell3
                                                                    (f (GHC.CString.unpackAppendCString#
                                                                          Type.$fShowCell2
                                                                          x)))) of ww11 { (#,#) ww12 ww13 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww12
                                                         ww13 } }))) of ww9 { (#,#) ww10 ww11 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww10
                                           ww11 } }))) of ww7 { (#,#) ww8 ww9 ->
                           GHC.Types.: @ GHC.Types.Char ww8 ww9 } }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
d0ca7644c51f3fac14055c8dea6aa384
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Type.Field
    -> System.Random.StdGen
    -> [Type.NumberFigure]
    -> GHC.Types.Int
    -> [Type.CoordFigures]
    -> [Graphics.Gloss.Internals.Data.Color.Color]
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 10,
     Strictness: <S,U><L,1*U><L,1*U(U,U)><L,1*U><L,1*U(U)><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,U>,
     Inline: [2] -}
811467076616b5f331e5521b863f5c05
  $wchangeCellInField ::
    Type.Field
    -> GHC.Prim.Int# -> GHC.Types.Int -> Type.Cell -> [[Type.Cell]]
  {- Arity: 4, Strictness: <L,U><S,U><L,1*U(U)><L,U>, Inline: [2],
     Unfolding: (\ (w :: Type.Field)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Type.Cell) ->
                 let {
                   $j :: [Type.Line] -> [Type.Line] -> [[Type.Cell]]
                     <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (beg :: [Type.Line])[OneShot] (end1 :: [Type.Line])[OneShot] ->
                     GHC.Base.++
                       @ [Type.Cell]
                       beg
                       (GHC.Types.:
                          @ [Type.Cell]
                          (case w1 of ww1 { GHC.Types.I# ww2 ->
                           Type.$wchangeCellInLine
                             (case end1 of wild {
                                [] -> GHC.List.badHead @ Type.Line : ipv ipv1 -> ipv })
                             ww2
                             w2 })
                          (case end1 of wild {
                             [] -> GHC.Types.[] @ Type.Line : ipv ipv1 -> ipv1 }))
                 } in
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ [Type.Cell]
                             (GHC.Types.[] @ Type.Line)
                             (GHC.Types.:
                                @ [Type.Cell]
                                (case w1 of ww1 { GHC.Types.I# ww2 ->
                                 Type.$wchangeCellInLine (GHC.List.badHead @ Type.Line) ww2 w2 })
                                (GHC.Types.[] @ Type.Line))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Line], [Type.Line])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Line
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                $j
                                  (GHC.Types.:
                                     @ Type.Line
                                     ipv
                                     (case ds2 of wild2 { (,) xs' xs'' -> xs' }))
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs'' })
                             1#
                             -> $j
                                  (GHC.Types.: @ Type.Line ipv (GHC.Types.[] @ Type.Line))
                                  ipv1 } }
                   1# -> $j (GHC.Types.[] @ Type.Line) w }) -}
7d4e5a7c53fa89ca1eaeecb360019e15
  $wchangeCellInLine ::
    Type.Line -> GHC.Prim.Int# -> Type.Cell -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,U><L,U>,
     Inline: [2],
     Unfolding: (\ (w :: Type.Line)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Type.Cell) ->
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ Type.Cell
                             (GHC.Types.[] @ Type.Cell)
                             (GHC.Types.: @ Type.Cell w1 (GHC.Types.[] @ Type.Cell))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Cell], [Type.Cell])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Cell
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ds2 of wild2 { (,) xs' xs'' ->
                                      case xs'' of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 } }))
                                  ipv
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs' })
                             1#
                             -> GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ipv1 of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 }))
                                  ipv
                                  (GHC.Types.[] @ Type.Cell) } }
                   1#
                   -> GHC.Base.++
                        @ Type.Cell
                        (GHC.Types.[] @ Type.Cell)
                        (GHC.Types.:
                           @ Type.Cell
                           w1
                           (case w of wild {
                              [] -> GHC.Types.[] @ Type.Cell : ipv ipv1 -> ipv1 })) }) -}
c02ee1d0e7445bca58c1fdd6dca50539
  $wgo :: GHC.Prim.Int# -> (# Type.Line, [Type.Line] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>, Inline: [2] -}
8c0b68f7d8843ba205219955a4180dd2
  $whigherCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.-# wild 1#))
                           ww3 })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
68ee8bfd63dcb7e88c5377c518a97269
  $wleftCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.-# wild 1#) })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
9a73d8fbbefffc0ac9118bc8c94ae9a4
  $wlowerCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.+# wild 1#))
                           ww3 })
                   14# -> GHC.Maybe.Nothing @ Type.Cell }) -}
44f99a6eb9048c66a0e83f4f201e61bb
  $wrightCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.+# wild 1#) })
                   9# -> GHC.Maybe.Nothing @ Type.Cell }) -}
ce69d132984f15c162cb28e115878ea4
  data Cell
    = Cell {numLine :: GHC.Types.Int,
            numCell :: GHC.Types.Int,
            cellType :: GHC.Types.Int,
            cellColor :: Graphics.Gloss.Internals.Data.Color.Color}
a84a815ac9d0a4e801bd442bfa023e94
  type CoordCell = (GHC.Types.Int, GHC.Types.Int)
b3b9710d1bc9d5841b96879fe6ccdd74
  type CoordFigures = [Type.CoordCell]
cff2286d27e6392df8d5af5cd3f4b99a
  type Field = [Type.Line]
3c2a97b0bb2bff3c82c2e04143c99934
  data GameState
    = GameState {gameField :: Type.Field,
                 gameRandomGen :: System.Random.StdGen,
                 gameFigures :: [Type.NumberFigure],
                 gameResult :: GHC.Types.Int,
                 coordTetr :: [Type.CoordFigures],
                 colorTetr :: [Graphics.Gloss.Internals.Data.Color.Color],
                 endGame :: GHC.Types.Bool,
                 rotateTypeFigure :: GHC.Types.Int}
bec16fc1c01d7327740e42f85f13dafe
  type Line = [Type.Cell]
ee576e2d2b8f44f9596901e8945ba26f
  type NumberFigure = GHC.Types.Int
e64fdd7b854cd30f2e9dca7436f9636f
  type Result = GHC.Types.Int
ce69d132984f15c162cb28e115878ea4
  cellColor :: Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds4 }) -}
ce69d132984f15c162cb28e115878ea4
  cellType :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds3 }) -}
404dc8e849a7d4666c555262fac36c57
  changeCell :: Type.Field -> Type.Cell -> Type.Cell -> Type.Field
  {- Arity: 3,
     Strictness: <L,U><S(S(S)LLL),1*U(1*U(U),1*U(U),A,A)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (oldCell :: Type.Cell)
                   (newCell :: Type.Cell) ->
                 case oldCell of wild { Type.Cell ds ds1 ds2 ds3 ->
                 Type.changeCellInField field ds ds1 newCell }) -}
26217e12acaf2e7546740dd30e9aeca6
  changeCellInField ::
    Type.Field
    -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell -> Type.Field
  {- Arity: 4, Strictness: <L,U><S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Type.Field)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInField w ww1 w2 w3 }) -}
41171286b5bf053904c00b0162a8833a
  changeCellInLine ::
    Type.Line -> GHC.Types.Int -> Type.Cell -> Type.Line
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S(S),1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Type.Line) (w1 :: GHC.Types.Int) (w2 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInLine w ww1 w2 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  colorTetr ::
    Type.GameState -> [Graphics.Gloss.Internals.Data.Color.Color]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  coordTetr :: Type.GameState -> [Type.CoordFigures]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
381069a73fbc1e853e0228197ae15e26
  createColorFigures :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.green
                   Type.createColorFigures1) -}
d9da9d2a4f71cb0b99bb2231ebfb5186
  createColorFigures1 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures8
                   Type.createColorFigures2) -}
0804850fdda26a6d6728d1191591b91b
  createColorFigures2 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.violet
                   Type.createColorFigures3) -}
6023615c9cddbbf9b82a7aa8f60fe89e
  createColorFigures3 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.red
                   Type.createColorFigures4) -}
3d9f8f13bf0a85acf949e756731d8ff0
  createColorFigures4 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.blue
                   Type.createColorFigures5) -}
536baa2f93e4949c17d9ee2e13eb304d
  createColorFigures5 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.yellow
                   Type.createColorFigures6) -}
2e4688b1fb06df23ca8a84e7b0b56905
  createColorFigures6 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures7
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Color.Color)) -}
7e2a5821964b21af882c60492f691b7c
  createColorFigures7 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.5#
                   0.5#
                   0.5#
                   1.0#) -}
a8b896f4d46ca27ab184df07aca15dd6
  createColorFigures8 :: Graphics.Gloss.Internals.Data.Color.Color
  {- Unfolding: (case Graphics.Gloss.Internals.Data.Color.$wclampColor
                        0.2#
                        0.2#
                        1.2#
                        1.0# of ww5 { (#,,,#) ww6 ww7 ww8 ww9 ->
                 Graphics.Gloss.Internals.Data.Color.RGBA ww6 ww7 ww8 ww9 }) -}
c6aeabd63007d112aff70ef8b7e46514
  createCoordFigures :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures43
                   Type.createCoordFigures1) -}
17dc64d1f5a90d62f8ff9d23b0372fe7
  createCoordFigures1 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures38
                   Type.createCoordFigures2) -}
a5d5dfedb25af519835f1256463bdca4
  createCoordFigures10 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures11
                   (GHC.Types.[] @ Type.CoordCell)) -}
cb61f12027d7f38cb662b6535cd8d422
  createCoordFigures11 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures12)) -}
45d42efc6f4be574259cd203d28b78b1
  createCoordFigures12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
37ab4ebb2eceba0f297d6c7433323eae
  createCoordFigures13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
5f51d0918812b10f8a85c7fbc1ac79e3
  createCoordFigures14 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures15)) -}
91b56e2f22b44203e2305713751abfa3
  createCoordFigures15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
6e7c83ddab3a40a8086300c1bda1b370
  createCoordFigures16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures15)) -}
9629b9441f16288ff122895f7803dde2
  createCoordFigures17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
e39d166cc248a158dd62ebdfbdc34696
  createCoordFigures18 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures15)) -}
980d7276ad88736ccea6fb3a9441f2da
  createCoordFigures19 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures20) -}
c811f90968c4f8217130513043775b38
  createCoordFigures2 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures35
                   Type.createCoordFigures3) -}
aaeb680c108c9efbd6c1cb362d33d15f
  createCoordFigures20 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures9) -}
adf964cb4f22cc227e834e7741e3ed15
  createCoordFigures21 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures12)) -}
0d8c4e0350b476efc4ec951395603294
  createCoordFigures22 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures12)) -}
a2905757f56129ff84eb86f63303d6c8
  createCoordFigures23 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures24) -}
aa3b720abf94b5ba921917d1ec896dd6
  createCoordFigures24 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures25) -}
3e706fe1c303214300dbef6496c62584
  createCoordFigures25 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures26) -}
fbe67d088a014fe0c76755c9db050577
  createCoordFigures26 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures27
                   (GHC.Types.[] @ Type.CoordCell)) -}
5cb0e4bcde21683bb488a4a5d7b2b449
  createCoordFigures27 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28,
                  Type.createCoordFigures15)) -}
553a953385025b5b7c1a1094becd93f7
  createCoordFigures28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
5bb5a4f493fa138978839bb9e52feb75
  createCoordFigures29 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures30) -}
e40c226509029b6dd1cdc13be66fbe33
  createCoordFigures3 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures29
                   Type.createCoordFigures4) -}
977f0f12de6640bae4d71d76784f0641
  createCoordFigures30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures31) -}
6151372bc6dd4aa88fa1e2b2c021d531
  createCoordFigures31 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures32) -}
3f51460f8b77e8a297afec3f8b01b476
  createCoordFigures32 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   (GHC.Types.[] @ Type.CoordCell)) -}
ec65d613bb12a0fd5bb498765c2f0188
  createCoordFigures33 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures34)) -}
e09281eceb7c7ae55772e0f4085e819a
  createCoordFigures34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
0552b3e2b2446fe127db414411e2fdc7
  createCoordFigures35 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures36) -}
fb74204248c37489d3266741a0a4d817
  createCoordFigures36 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures37) -}
a253b99335a825e94b7d1671faeb1bea
  createCoordFigures37 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures32) -}
8df58521a42eefa453bdcdb0b9a5a470
  createCoordFigures38 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures39) -}
7794044744f5fcd261056a650e6a83c3
  createCoordFigures39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures40) -}
fb2872b35e2a1ede9600fcc575ca27e4
  createCoordFigures4 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures23
                   Type.createCoordFigures5) -}
1d5abec1fab8ce0fc4572012b838ee7a
  createCoordFigures40 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures41) -}
03e998988a14901f1dfba67c4c82c479
  createCoordFigures41 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures42
                   (GHC.Types.[] @ Type.CoordCell)) -}
86716913e2d4d52f5cc15729d49da795
  createCoordFigures42 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures34)) -}
9974717871a5f14f94856f5e1b7c018d
  createCoordFigures43 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures44) -}
e8712226b128ad79dde17eeb6f65dc83
  createCoordFigures44 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures37) -}
3594ead13a9abe52484f58e9af3783fd
  createCoordFigures5 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures19
                   Type.createCoordFigures6) -}
9732b74a2a05b1674e2fe71893386563
  createCoordFigures6 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures7
                   (GHC.Types.[] @ Type.CoordFigures)) -}
8fe90f9e0cf75bc8c265ca506ff36a08
  createCoordFigures7 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures8) -}
133ce647bedf43f5c8697f470ae8c6d7
  createCoordFigures8 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures9) -}
d498ecc244f79ec77e0331d8655d3b0c
  createCoordFigures9 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures10) -}
5837a6a3357dcf1de5c58ee8c39686ba
  createField :: Type.Field
  {- Unfolding: (case Type.$wgo 0# of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ Type.Line ww1 ww2 }) -}
4ac8ec04ce69dfcc8cda402764cca950
  createLine :: GHC.Types.Int -> Type.Line
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go :: GHC.Prim.Int# -> [Type.Cell]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Prim.Int#) ->
                     GHC.Types.:
                       @ Type.Cell
                       (Type.Cell
                          x
                          (GHC.Types.I# x1)
                          Type.createCoordFigures13
                          Graphics.Gloss.Data.Color.white)
                       (case x1 of wild {
                          DEFAULT -> go (GHC.Prim.+# wild 1#)
                          9# -> GHC.Types.[] @ Type.Cell })
                 } in
                 go 0#) -}
034ff93e7aecb5bc09b8c7a0cd17bc9c
  createRotateModels :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels115
                   Type.createRotateModels1) -}
315e46fdb9280f9906b0550a9ed17fe7
  createRotateModels1 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels114
                   Type.createRotateModels2) -}
4f30407408f13e9b27f6e9ba340ff75b
  createRotateModels10 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels97
                   Type.createRotateModels11) -}
0059feb657919d7bae5626658e391325
  createRotateModels100 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels94) -}
7e5bbe0c0be7b1d967ce7cce2afcf4b3
  createRotateModels101 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels96,
                  Type.createRotateModels29)) -}
a55405eaa314dab4dd3c6c3a78b717a4
  createRotateModels102 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels98,
                  Type.createRotateModels35)) -}
9b016aedd40938817a7a2aa885bb30b9
  createRotateModels103 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels104,
                  Type.createRotateModels29)) -}
01084f8ea0863cb895710fb60e50520d
  createRotateModels104 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels83) -}
5cb91e3bd89561989b12ab9220c61832
  createRotateModels105 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels106,
                  Type.createRotateModels35)) -}
78ed62b4b92aa686da7d149d8b62b903
  createRotateModels106 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels107) -}
117b1fbea069bbc0fd6e618c86bae6de
  createRotateModels107 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels32) -}
40d2874390e8660518314754957ca5db
  createRotateModels108 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels104,
                  Type.createRotateModels35)) -}
ff0587ced25dab07460c731a578b40c1
  createRotateModels109 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels106,
                  Type.createRotateModels38)) -}
f7b4acf0e7c0377b358b5c26dd9bef48
  createRotateModels11 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels95
                   Type.createRotateModels12) -}
91a8e53e81377e1c5c9c888083cb8860
  createRotateModels110 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels111,
                  Type.createRotateModels29)) -}
58aa97f043f8d75674d5c69c335c4f39
  createRotateModels111 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels112) -}
81e9c467fddc466d6bd45eead1dd6fe0
  createRotateModels112 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels100) -}
c9aaff10df694c5f1c112443a0a1bbd2
  createRotateModels113 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels111,
                  Type.createRotateModels35)) -}
1bb84cde73acbad39885747019d61cf3
  createRotateModels114 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels111,
                  Type.createRotateModels38)) -}
0164f317ca852c5930a9b9f218e08c58
  createRotateModels115 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels111,
                  Type.createRotateModels36)) -}
f5d2dc43b8178c348513a46fb032d353
  createRotateModels12 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels90
                   Type.createRotateModels13) -}
50a977cb8d747e7c30a1590e947369d0
  createRotateModels13 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels87
                   Type.createRotateModels14) -}
b20da9080ae24c57910675a015dbac13
  createRotateModels14 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels85
                   Type.createRotateModels15) -}
4acde5d8d220d93bff272024e3215ca5
  createRotateModels15 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels81
                   Type.createRotateModels16) -}
e2856a2327e8a8f63b415dbbdff4a05a
  createRotateModels16 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels80
                   Type.createRotateModels17) -}
22979b37da5875a0d304be037cbe090c
  createRotateModels17 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels79
                   Type.createRotateModels18) -}
016fe82030c993ec28b3c234add0a2e4
  createRotateModels18 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels73
                   Type.createRotateModels19) -}
eb76b2866f1379552ff8c966af07f61f
  createRotateModels19 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels67
                   Type.createRotateModels20) -}
48d398f00f4c4634e413871c443bde56
  createRotateModels2 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels113
                   Type.createRotateModels3) -}
fb0923ec678923ce83acec29e5e44dde
  createRotateModels20 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels64
                   Type.createRotateModels21) -}
77d2ad7a02e4acf97fbadd707d665378
  createRotateModels21 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels28
                   Type.createRotateModels22) -}
34c25e46d1b0ef2e4d1165929c960536
  createRotateModels22 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels59
                   Type.createRotateModels23) -}
ea275bce8d55696faa1fbae57f0339b1
  createRotateModels23 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels55
                   Type.createRotateModels24) -}
146d0eb22bb208717981e1dc6d63d0b6
  createRotateModels24 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels50
                   Type.createRotateModels25) -}
d2658282c6937c8b48fa910de78a680f
  createRotateModels25 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels44
                   Type.createRotateModels26) -}
2f9c0e13318b556f5384a2f9659d2ed6
  createRotateModels26 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels37
                   Type.createRotateModels27) -}
5bf60deee8ca78d64de608398e75ee14
  createRotateModels27 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels28
                   (GHC.Types.[] @ (Type.CoordFigures, Type.CoordCell))) -}
b8332f30288f37a7d88ab80ff506f712
  createRotateModels28 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels30,
                  Type.createRotateModels29)) -}
fb4d6e3123b83c587f2aca5f1aeba28f
  createRotateModels29 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17, Type.$fShowCell8)) -}
9350cb8064373136e587f22ccf9b602e
  createRotateModels3 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels110
                   Type.createRotateModels4) -}
386b4d9a3e59244eccbf21dd7aa67727
  createRotateModels30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels31) -}
3280b0087bc1c1813eac0b8c807de68c
  createRotateModels31 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels32) -}
fcc902c53439b399aeff12a890eeef8b
  createRotateModels32 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels33) -}
edb142affb446cdc08e7cb1b5a1a3cf5
  createRotateModels33 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels34
                   (GHC.Types.[] @ Type.CoordCell)) -}
0964745fc543c83346d6fcd35efdce15
  createRotateModels34 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures13)) -}
ec628821b01ab319f9eaa999e9b5e724
  createRotateModels35 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures17)) -}
f78769cfa2c6620daeb5d6837502ced7
  createRotateModels36 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.$fShowCell8)) -}
1cdac9734d56e11894458d3f6a3facec
  createRotateModels37 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels39,
                  Type.createRotateModels38)) -}
de480e3ae26131c99d06d66112b5ab41
  createRotateModels38 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures17)) -}
45536b34f4f4938f719874503c37a6ac
  createRotateModels39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels40) -}
fc08274098b8a6dcb1282fda160d9d76
  createRotateModels4 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels109
                   Type.createRotateModels5) -}
3a3fc5a66b918a849ef6af260f903488
  createRotateModels40 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels41) -}
758cfd16407f273f3fa8027f5fb491b0
  createRotateModels41 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels42) -}
e801fd2d0b0d1b79db4b0c1da7a65a28
  createRotateModels42 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels43
                   (GHC.Types.[] @ Type.CoordCell)) -}
d51e2985d2ea71337b1e36cb6e1da535
  createRotateModels43 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures17)) -}
17b0e720def6e24b8c652f927b7e7bec
  createRotateModels44 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels45,
                  Type.createRotateModels36)) -}
b0ad14faa9632d2238d046bd11fa5351
  createRotateModels45 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels46) -}
752ae3891b4c457444f44d6ba90d0834
  createRotateModels46 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels47) -}
28be8e814dd0af5dbc1c47bde7ec6c44
  createRotateModels47 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels49
                   Type.createRotateModels48) -}
562a0de8bd6cfae5201fce8bb2c62c58
  createRotateModels48 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   (GHC.Types.[] @ Type.CoordCell)) -}
2e2a1c80df5e75ceec669378b57c24af
  createRotateModels49 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures13)) -}
5dc3ccefcde0eec359a373b844d38a18
  createRotateModels5 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels108
                   Type.createRotateModels6) -}
5ea3054b2e6d43c4309b362225a7c618
  createRotateModels50 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels52,
                  Type.createRotateModels51)) -}
900131f4b9541d024e516a4799ffe20f
  createRotateModels51 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13, Type.$fShowCell8)) -}
7c79a7d4e5cf197dbb4a5b41436cd3c3
  createRotateModels52 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels53) -}
d1a8afd8f409046e8e5f1337f3a85a38
  createRotateModels53 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels54) -}
c0223dc10852d135a5922016e936310f
  createRotateModels54 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels51
                   Type.createRotateModels42) -}
2cffc4e05262d0a4df4aa7383733aad7
  createRotateModels55 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels56,
                  Type.createRotateModels49)) -}
f9ca88628baaaf75b9a3559b1519030e
  createRotateModels56 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels57) -}
e70c8cfa267012d2372184ad4ec43e32
  createRotateModels57 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels58) -}
c90e8666a81564eb565e7190f9ce434f
  createRotateModels58 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels49
                   Type.createRotateModels33) -}
b9ff0edf020303b706f32fe0d6b95704
  createRotateModels59 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels60,
                  Type.createRotateModels36)) -}
682064cc436782f164b7b410074cddcf
  createRotateModels6 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels105
                   Type.createRotateModels7) -}
79afd6bc5a38277488b0a51d17c28f0d
  createRotateModels60 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels61) -}
d6959165d2b46d0516af81b086f2c40f
  createRotateModels61 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels62) -}
6e3079c49f645f9dbf242a28ee6a9f24
  createRotateModels62 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels63) -}
1b0adc88d7ee8511a205df12733a7620
  createRotateModels63 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels51
                   (GHC.Types.[] @ Type.CoordCell)) -}
c9d5ac9f528adc2d26d061b69a97c8f7
  createRotateModels64 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels65,
                  Type.createRotateModels43)) -}
2c81dbdb1af825569339a53e27d454bd
  createRotateModels65 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels66) -}
d109a5ea038c9396c08f05608e4508d6
  createRotateModels66 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels54) -}
f74edda6c0abc913db1c8ee51f9f1ef6
  createRotateModels67 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels68,
                  Type.createRotateModels49)) -}
c4d04ec85c108b7bfbe1b62301914b32
  createRotateModels68 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels69) -}
dbae2963da412a1f01d17e0f4752ac92
  createRotateModels69 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels70) -}
dee02a4345fce2d105cac1e936da56be
  createRotateModels7 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels103
                   Type.createRotateModels8) -}
bdb62bc1c4d257967740491492a1d8f6
  createRotateModels70 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels49
                   Type.createRotateModels71) -}
34f485e8a387d8b35d230c9f19cd289c
  createRotateModels71 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels72
                   (GHC.Types.[] @ Type.CoordCell)) -}
e057fd47da957f4f847c9e5ff40a76b4
  createRotateModels72 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures28)) -}
aeb587bce484b21a6250fe410b7fe270
  createRotateModels73 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels74,
                  Type.createRotateModels29)) -}
313c1568cec04a25b65966cfb21839f5
  createRotateModels74 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels75) -}
4cd1bd58aca3e05bc66b2e82cec54ad2
  createRotateModels75 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels76) -}
274df4901dd30dbf57bea57493aa84ec
  createRotateModels76 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels51
                   Type.createRotateModels77) -}
c0235976cc73f779d7ee8aa42394823f
  createRotateModels77 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels78
                   (GHC.Types.[] @ Type.CoordCell)) -}
3b34481dcf0d44e16f3639e9a415a0ef
  createRotateModels78 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28, Type.$fShowCell8)) -}
b0e95b62a5a4bee61cd95bfc089fd1de
  createRotateModels79 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels68,
                  Type.createRotateModels38)) -}
61c38422e7f77dd8ebb5f23f51f9de25
  createRotateModels8 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels102
                   Type.createRotateModels9) -}
09bf6d421361435aa6db49aec9804993
  createRotateModels80 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels74,
                  Type.createRotateModels51)) -}
baba35f597fccbbe51e891a8e4c258a4
  createRotateModels81 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels82,
                  Type.createRotateModels29)) -}
5d2c5116a81350e940d288c36fd7255f
  createRotateModels82 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels83) -}
04e31d1ebfdc84a2ea6b9e6c45beb53d
  createRotateModels83 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels84) -}
bdf5b77d67ae85dc3d8846f309bbd00f
  createRotateModels84 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels63) -}
9920096f8d68dcc093469808b803bb3b
  createRotateModels85 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels86,
                  Type.createRotateModels35)) -}
246da574651e101f3f1abd8a8340b16f
  createRotateModels86 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels31) -}
88f3da0371b492435e729692766a4401
  createRotateModels87 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels88,
                  Type.createRotateModels35)) -}
8b57c1f2446a3a66fab504cd94cf6fd6
  createRotateModels88 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels89) -}
d5905dc7f55b67d9c3598e315ecd29b2
  createRotateModels89 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels29
                   Type.createRotateModels41) -}
d935f048dbfcbd78c63c0c211f790d03
  createRotateModels9 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels101
                   Type.createRotateModels10) -}
c9ea2e4a61d31cfea5beaceaf50e547a
  createRotateModels90 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels91,
                  Type.createRotateModels38)) -}
6c73b7047c726f5a6aa5c4310d7756c4
  createRotateModels91 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels92) -}
7c4d48069d88a5219c5183b30da1e00b
  createRotateModels92 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels93) -}
a323bafc2b762447ee8633c9b2c986e2
  createRotateModels93 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels49
                   Type.createRotateModels94) -}
ae2ee0ccef87735c42a322558031f052
  createRotateModels94 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   (GHC.Types.[] @ Type.CoordCell)) -}
846a5e95a5e1147a490d4db6165e8f81
  createRotateModels95 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels96,
                  Type.createRotateModels35)) -}
7a5366d1def05dfe35e242b419125c46
  createRotateModels96 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels36
                   Type.createRotateModels89) -}
4703ad2bd00987e5160f3aceed468eb3
  createRotateModels97 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels98,
                  Type.createRotateModels38)) -}
f275323162433b406c21a5748da4ca59
  createRotateModels98 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels38
                   Type.createRotateModels99) -}
ae57546adb09e2d2fc65b452303cb0f4
  createRotateModels99 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels49
                   Type.createRotateModels100) -}
3c2a97b0bb2bff3c82c2e04143c99934
  endGame :: Type.GameState -> GHC.Types.Bool
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
23c0104d27cbb4885b4db356b48a4902
  findCellCond ::
    Type.Field
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
c2ecb6ae9bef2af1f02ac0651f59d936
  findCellCondLine ::
    Type.Line
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
f3348f54733fff744c14c483dc51410e
  funFieldAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
b05280931434062c8979af423c992a53
  funFieldAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.All <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.All
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f y1 of wild2 {
                                     GHC.Types.False
                                     -> GHC.Types.False
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:All[0]))
                                     GHC.Types.True -> go1 ys1 } }
                          } in
                          go1 y }
                 } in
                 go field) -}
e2fc49ae8e6e6604234795ccc0087a1c
  funFieldAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
28da8c06f873c0eb12d8ea26c51b0d03
  funFieldAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.Any <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.Any
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f y1 of wild2 {
                                     GHC.Types.False -> go1 ys1
                                     GHC.Types.True
                                     -> GHC.Types.True
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                          } in
                          go1 y }
                 } in
                 go field) -}
e24fd0894b0db4c0f3ced2f703c0dbb6
  funLineAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
a55ee014c4e0af7d6be6cdd6267dcfa6
  funLineAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> case f y of wild1 {
                            GHC.Types.False
                            -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                            GHC.Types.True -> go ys } }
                 } in
                 go str1) -}
dea54d666d4e02685791bbf0723e0424
  funLineAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
9a2b560ad6e20d44d8144291862d5d3c
  funLineAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> case f y of wild1 {
                            GHC.Types.False -> go ys
                            GHC.Types.True
                            -> GHC.Types.True
                                 `cast`
                               (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                 } in
                 go str1) -}
3c2a97b0bb2bff3c82c2e04143c99934
  gameField :: Type.GameState -> Type.Field
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  gameFigures :: Type.GameState -> [Type.NumberFigure]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  gameRandomGen :: Type.GameState -> System.Random.StdGen
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U(U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  gameResult :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
e0b0d74dc81858d2413e5fb147c7c3a8
  getCell ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 GHC.List.$w!!
                   @ Type.Cell
                   (GHC.List.$w!! @ Type.Line field ww3)
                   ww1 } }) -}
cbf98000775ec3539180fa3ef9520b83
  getCellColor ::
    Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds3 }) -}
1404069a3436faecd4bda95ba610f5a5
  getCellLine :: Type.Cell -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds }) -}
8a0d3190da84ef6f9cdaf13a11dd13bc
  getCellType :: Type.Cell -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds3 }) -}
d0d89ef5f6f1b1d4b13b6bb2c7192751
  higherCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$whigherCell ww6 ww2 w1 } }) -}
1fcd0aeb63942547b516cf8df40bd6a6
  leftCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wleftCell ww1 ww6 w1 } }) -}
b365ab3402e0b802bfae3b031f79a917
  lowerCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wlowerCell ww6 ww2 w1 } }) -}
e011b7b413381307ce976d37845fc3d2
  mapField :: (Type.Cell -> Type.Cell) -> Type.Field -> Type.Field
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
1d6884d694ac4844a73439dc5a9b450d
  mapLine :: (Type.Cell -> Type.Cell) -> Type.Line -> Type.Line
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
ce69d132984f15c162cb28e115878ea4
  numCell :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds2 }) -}
ce69d132984f15c162cb28e115878ea4
  numLine :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds1 }) -}
98857b461e4106f2a1a231a4d2b3b4d0
  rightCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wrightCell ww1 ww6 w1 } }) -}
3c2a97b0bb2bff3c82c2e04143c99934
  rotateTypeFigure :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
21e57c95a2c7b52276682d382c51505d
  typeCellFromField ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 case GHC.List.$w!!
                        @ Type.Cell
                        (GHC.List.$w!! @ Type.Line field ww3)
                        ww1 of wild { Type.Cell ds ds1 ds2 ds3 ->
                 ds2 } } }) -}
instance GHC.Show.Show [Type.Cell] = Type.$fShowCell
instance GHC.Show.Show [Type.GameState] = Type.$fShowGameState
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

