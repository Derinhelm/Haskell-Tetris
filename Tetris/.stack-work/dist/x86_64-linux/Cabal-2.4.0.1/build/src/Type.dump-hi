
==================== FINAL INTERFACE ====================
2019-04-02 13:59:03.10790252 UTC

interface project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an:Type 8063
  interface hash: 2add292dc3c0741afb178c4a053803f0
  ABI hash: 474f023ed593e4ad46fcc65960cc9981
  export-list hash: 7d4f048f3601777da3a5c061706431a6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7a242ffa3d761dff45aed995f1434522
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Type.changeCell
  Type.changeCellInField
  Type.changeCellInLine
  Type.createColorFigures
  Type.createCoordFigures
  Type.createField
  Type.createLine
  Type.createRotateModels
  Type.findCellCond
  Type.findCellCondLine
  Type.funFieldAll
  Type.funFieldAny
  Type.funLineAll
  Type.funLineAny
  Type.getCell
  Type.getCellColor
  Type.getCellLine
  Type.getCellType
  Type.higherCell
  Type.leftCell
  Type.lowerCell
  Type.mapField
  Type.mapLine
  Type.rightCell
  Type.typeCellFromField
  Type.Cell{Type.Cell cellColor cellType numCell numLine}
  Type.CoordCell
  Type.CoordFigures
  Type.End{Type.FirstEnd Type.Game Type.OldEnd}
  Type.Field
  Type.GameState{Type.GameState colorTetr coordTetr endGame gameField gameFigures gameRandomGen gameResult numLoop rotateTypeFigure userName}
  Type.Line
  Type.NumberFigure
  Type.Result
  Type.TypeCell{Type.Emp Type.Fly Type.Land}
module dependencies: Constans
package dependencies: GLURaw-2.0.0.4 GLUT-2.7.0.14
                      ObjectName-1.1.0.1 OpenGL-3.0.2.2 OpenGLRaw-3.3.2.0
                      StateVar-1.1.1.1 array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      fixed-0.2.1.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 gloss-1.13.0.1
                      gloss-rendering-1.13.0.2 half-0.3 integer-gmp-1.0.2.0
                      pretty-1.1.3.6 random-1.1 stm-2.5.0.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2
orphans: stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic text-1.2.3.1:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type half-0.3:Numeric.Half
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:Debug.Trace 6e89d30f3850c77c707392fc46e9b589
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  gloss-1.13.0.1:Graphics.Gloss dc3d422d35cd32353ee5470deb98e8ac
import  -/  gloss-1.13.0.1:Graphics.Gloss.Data.Color 63b215a24677775cb457045312664a10
import  -/  gloss-rendering-1.13.0.2:Graphics.Gloss.Internals.Data.Color 2716426e7777628bb37f6a888abf7b9e
import  -/  Constans 60b535094e56c8784fc092e714ad0ab4
  exports: 9c3bf02aef4de5ad20ea7235691d8b63
import  -/  random-1.1:System.Random 8c06dce30a9b8b4f2b7c15fb3f418e08
b6f7599dbdfbf950450e3f9c2089281f
  $fEqEnd :: GHC.Classes.Eq Type.End
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ Type.End Type.$fEqEnd_$c== Type.$fEqEnd_$c/= -}
b6f7599dbdfbf950450e3f9c2089281f
  $fEqEnd_$c/= :: Type.End -> Type.End -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Type.End) (y :: Type.End) ->
                 case x of wild {
                   Type.Game
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.Game -> GHC.Types.False }
                   Type.FirstEnd
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.FirstEnd -> GHC.Types.False }
                   Type.OldEnd
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.OldEnd -> GHC.Types.False } }) -}
b6f7599dbdfbf950450e3f9c2089281f
  $fEqEnd_$c== :: Type.End -> Type.End -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Type.End) (ds1 :: Type.End) ->
                 case ds of wild {
                   Type.Game
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.Game -> GHC.Types.True }
                   Type.FirstEnd
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.FirstEnd -> GHC.Types.True }
                   Type.OldEnd
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.OldEnd -> GHC.Types.True } }) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fEqTypeCell :: GHC.Classes.Eq Type.TypeCell
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.TypeCell Type.$fEqTypeCell_$c== Type.$fEqTypeCell_$c/= -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fEqTypeCell_$c/= ::
    Type.TypeCell -> Type.TypeCell -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Type.TypeCell) (y :: Type.TypeCell) ->
                 case x of wild {
                   Type.Land
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.Land -> GHC.Types.False }
                   Type.Fly
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.Fly -> GHC.Types.False }
                   Type.Emp
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True Type.Emp -> GHC.Types.False } }) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fEqTypeCell_$c== ::
    Type.TypeCell -> Type.TypeCell -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Type.TypeCell) (ds1 :: Type.TypeCell) ->
                 case ds of wild {
                   Type.Land
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.Land -> GHC.Types.True }
                   Type.Fly
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.Fly -> GHC.Types.True }
                   Type.Emp
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Type.Emp -> GHC.Types.True } }) -}
e228461bbcff362ca52d6588cd0a3991
  $fShowCell :: GHC.Show.Show Type.Cell
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.Cell
                  Type.$fShowCell_$cshowsPrec
                  Type.$fShowCell_$cshow
                  Type.$fShowCell_$cshowList -}
e228461bbcff362ca52d6588cd0a3991
  $fShowCell1 :: Type.Cell -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U,1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Type.Cell) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 Type.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
2e750520aedbea5328f1ef63c565530b
  $fShowCell2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
e228461bbcff362ca52d6588cd0a3991
  $fShowCell_$cshow :: Type.Cell -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U,1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.Cell) ->
                 Type.$fShowCell_$cshowsPrec
                   Type.$fShowCell2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e228461bbcff362ca52d6588cd0a3991
  $fShowCell_$cshowList :: [Type.Cell] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.Cell]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.Cell Type.$fShowCell1 ls s) -}
e228461bbcff362ca52d6588cd0a3991
  $fShowCell_$cshowsPrec ::
    GHC.Types.Int -> Type.Cell -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U),U(U),U,1*U(U,U,U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Type.Cell) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Type.Cell ww3 ww4 ww5 ww6 ->
                 Type.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
b6f7599dbdfbf950450e3f9c2089281f
  $fShowEnd :: GHC.Show.Show Type.End
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.End
                  Type.$fShowEnd_$cshowsPrec
                  Type.$fShowEnd_$cshow
                  Type.$fShowEnd_$cshowList -}
387e7d7172bc54bc4031f73df26c4850
  $fShowEnd1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowEnd2) -}
2a4a9360814494560d6a9dd58dc75584
  $fShowEnd2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OldEnd"#) -}
8e8a86bcda2e34f443fc19ef4a61269a
  $fShowEnd3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowEnd4) -}
47ec610a869c0356cdeb6b8c2387df0c
  $fShowEnd4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FirstEnd"#) -}
22447ed32756c3771c8110f81bbdee74
  $fShowEnd5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowEnd6) -}
4c44c9c3afc551ce70cd968b6d67e642
  $fShowEnd6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Game"#) -}
b6f7599dbdfbf950450e3f9c2089281f
  $fShowEnd_$cshow :: Type.End -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.End) ->
                 case x of wild {
                   Type.Game -> Type.$fShowEnd5
                   Type.FirstEnd -> Type.$fShowEnd3
                   Type.OldEnd -> Type.$fShowEnd1 }) -}
b6f7599dbdfbf950450e3f9c2089281f
  $fShowEnd_$cshowList :: [Type.End] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.End]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.End Type.$w$cshowsPrec1 ls s) -}
b6f7599dbdfbf950450e3f9c2089281f
  $fShowEnd_$cshowsPrec ::
    GHC.Types.Int -> Type.End -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Type.End) (w2 :: GHC.Base.String) ->
                 Type.$w$cshowsPrec1 w1 w2) -}
af8412db864a9629e18c4a0ad20c86a2
  $fShowGameState :: GHC.Show.Show Type.GameState
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.GameState
                  Type.$fShowGameState_$cshowsPrec
                  Type.$fShowGameState_$cshow
                  Type.$fShowGameState_$cshowList -}
af8412db864a9629e18c4a0ad20c86a2
  $fShowGameState1 :: Type.GameState -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Type.$fShowGameState_$cshowsPrec Type.$fShowCell2) -}
af8412db864a9629e18c4a0ad20c86a2
  $fShowGameState_$cshow :: Type.GameState -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.GameState) ->
                 Type.$fShowGameState_$cshowsPrec
                   Type.$fShowCell2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
af8412db864a9629e18c4a0ad20c86a2
  $fShowGameState_$cshowList :: [Type.GameState] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.GameState]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.GameState Type.$fShowGameState1 ls s) -}
af8412db864a9629e18c4a0ad20c86a2
  $fShowGameState_$cshowsPrec ::
    GHC.Types.Int -> Type.GameState -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U,1*U(U),1*U(U))><L,U> -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fShowTypeCell :: GHC.Show.Show Type.TypeCell
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.TypeCell
                  Type.$fShowTypeCell_$cshowsPrec
                  Type.$fShowTypeCell_$cshow
                  Type.$fShowTypeCell_$cshowList -}
490ae45ab65338fd68ac31d5788f0b93
  $fShowTypeCell1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowTypeCell2) -}
2e2076f282a89eca5aeb5d99d684300a
  $fShowTypeCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Emp"#) -}
0b3b2260e054296496768a36d6d0d5e4
  $fShowTypeCell3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowTypeCell4) -}
a9a243b95978e24ac02ae65d5b288791
  $fShowTypeCell4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fly"#) -}
f4c68dc8e1adef9a1b940fb37d4c3bd8
  $fShowTypeCell5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Type.$fShowTypeCell6) -}
fce457b311ec0aa82bed46d532428f14
  $fShowTypeCell6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Land"#) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fShowTypeCell_$cshow :: Type.TypeCell -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.TypeCell) ->
                 case x of wild {
                   Type.Land -> Type.$fShowTypeCell5
                   Type.Fly -> Type.$fShowTypeCell3
                   Type.Emp -> Type.$fShowTypeCell1 }) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fShowTypeCell_$cshowList :: [Type.TypeCell] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.TypeCell]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.TypeCell Type.$w$cshowsPrec2 ls s) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $fShowTypeCell_$cshowsPrec ::
    GHC.Types.Int -> Type.TypeCell -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Type.TypeCell)
                   (w2 :: GHC.Base.String) ->
                 Type.$w$cshowsPrec2 w1 w2) -}
b66278e7125e440179bcfe20c31d9e4b
  $tc'Cell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2369569555503978646##
                   3546076993841330935##
                   Type.$trModule
                   Type.$tc'Cell2
                   0#
                   Type.$tc'Cell1) -}
100473571f6e16dac9c2aec217d466fb
  $tc'Cell1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f5fb5b6e976428d456ee74f97a28ed66
  $tc'Cell2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Cell3) -}
568d761bfdc1bb510f63d58688e7be8d
  $tc'Cell3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cell"#) -}
82e2c88a60658b3493482a86984e1459
  $tc'Emp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16843793682586637779##
                   3666689126578052001##
                   Type.$trModule
                   Type.$tc'Emp2
                   0#
                   Type.$tc'Emp1) -}
1eac5330da5ef740071e9bb5c1a4fc82
  $tc'Emp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
cdd2c7b7494716f9ed7c8ba1a7bd7d4d
  $tc'Emp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Emp3) -}
4ed33d39737731dd8777361b03cbb61e
  $tc'Emp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Emp"#) -}
8e08cd276f67f1901c03d1fa3c0b07d0
  $tc'FirstEnd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3534887418067989128##
                   6533620645482951473##
                   Type.$trModule
                   Type.$tc'FirstEnd2
                   0#
                   Type.$tc'FirstEnd1) -}
14e4ebbcdbda000d1bb27edd9ee3708d
  $tc'FirstEnd1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c98fe7d1e9ed8b2bb839674670bc55c0
  $tc'FirstEnd2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'FirstEnd3) -}
958de3f1e68701d7b3780488e522e0c5
  $tc'FirstEnd3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FirstEnd"#) -}
903f4ae866fa51205c5f6c43f5745db8
  $tc'Fly :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7222723444656226341##
                   17383883453366632710##
                   Type.$trModule
                   Type.$tc'Fly1
                   0#
                   Type.$tc'Emp1) -}
69cd62f2026e51d1529d521416b577f8
  $tc'Fly1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Fly2) -}
075f5dbc23803bfd4e16ba325b22e815
  $tc'Fly2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fly"#) -}
a2077a77006045807612bad5a7c7ff24
  $tc'Game :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3332124537937376890##
                   8816284586059304685##
                   Type.$trModule
                   Type.$tc'Game1
                   0#
                   Type.$tc'FirstEnd1) -}
80947f9ebe5054c60467418fdd8e21f5
  $tc'Game1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Game2) -}
d28d9f774ffb8ad7b6e56a373a521521
  $tc'Game2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Game"#) -}
5d05ad53d9a8ac681c2f50c3eec38ebc
  $tc'GameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2100435522962800206##
                   8447633230906775044##
                   Type.$trModule
                   Type.$tc'GameState2
                   0#
                   Type.$tc'GameState1) -}
215e8f299b97b29c0e0ff9345bee5054
  $tc'GameState1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ac78d682b276088ab7445b253686add9
  $tc'GameState2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'GameState3) -}
0690df0421d192e46b417314398618b9
  $tc'GameState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GameState"#) -}
d0f6e1b93db5a6b0ff03f1dd6941878e
  $tc'Land :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13096114788725195317##
                   17395708346439557131##
                   Type.$trModule
                   Type.$tc'Land1
                   0#
                   Type.$tc'Emp1) -}
abd6490eef3db4bf29ecaaeedcd2168d
  $tc'Land1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Land2) -}
0de1bb3bb4d3883fc058aa36ceea846d
  $tc'Land2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Land"#) -}
43d30308cff21ddec2501f599ba74e50
  $tc'OldEnd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2060907802645329849##
                   15578515076110330538##
                   Type.$trModule
                   Type.$tc'OldEnd1
                   0#
                   Type.$tc'FirstEnd1) -}
424c4786dc07d7fe31c72f650ec1178b
  $tc'OldEnd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'OldEnd2) -}
e081b742f28bc206f808524a61e9591c
  $tc'OldEnd2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OldEnd"#) -}
60fc49af8eb34866731fe044f980853f
  $tcCell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3801954717549597669##
                   5043836793025382721##
                   Type.$trModule
                   Type.$tcCell1
                   0#
                   GHC.Types.krep$*) -}
a4ff2483b7b9ee6506d3daa8c5e1ca63
  $tcCell1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcCell2) -}
8707212698cdb7ee998840e85686d133
  $tcCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cell"#) -}
ee616bff546a532234540d2306b4f3ca
  $tcEnd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6821464173828419809##
                   45690705818986987##
                   Type.$trModule
                   Type.$tcEnd1
                   0#
                   GHC.Types.krep$*) -}
b7bceafdb3b940c01d3289fc07ce4213
  $tcEnd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcEnd2) -}
e00b16b7d3ddc0638e6101d7640b8f77
  $tcEnd2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("End"#) -}
cb472bbf602250c6caa9af558b1cb923
  $tcGameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11266966231570736974##
                   2925421039485752395##
                   Type.$trModule
                   Type.$tcGameState1
                   0#
                   GHC.Types.krep$*) -}
66bee296bcb19f01f2469cb74592e42f
  $tcGameState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcGameState2) -}
04682f0d06a53961aa666729403258d4
  $tcGameState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameState"#) -}
b719136159b78bedcaf2251192874f59
  $tcTypeCell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5163136985343707038##
                   12657961131453065017##
                   Type.$trModule
                   Type.$tcTypeCell1
                   0#
                   GHC.Types.krep$*) -}
b3feec2e60f73d0c3a50cb11cecdaaa3
  $tcTypeCell1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcTypeCell2) -}
e65e0cc76bd6dc6d234e9939f1d0f2e7
  $tcTypeCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeCell"#) -}
38d9520e039218707b0546bd013919d4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Type.$trModule3 Type.$trModule1) -}
10ee3b6e5d434b7a5b75b2219ce8981f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule2) -}
56e7f65effb97fbfb615a77f77674444
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
9df2574ede9cfe33891f96b5ebf49907
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule4) -}
b37ccd362537d441e3fb680d1eeb2f5b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an"#) -}
f8a81a83e8e1cce00eef235cafb899c8
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Type.TypeCell
    -> Graphics.Gloss.Internals.Data.Color.Color
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,U(U)><L,U(U)><L,U><L,1*U(U,U,U,U)>,
     Inline: [2] -}
b6f7599dbdfbf950450e3f9c2089281f
  $w$cshowsPrec1 :: Type.End -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Type.End) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Type.Game -> GHC.Base.++ @ GHC.Types.Char Type.$fShowEnd5 w1
                   Type.FirstEnd -> GHC.Base.++ @ GHC.Types.Char Type.$fShowEnd3 w1
                   Type.OldEnd
                   -> GHC.Base.++ @ GHC.Types.Char Type.$fShowEnd1 w1 }) -}
afe6a0fb87e0fa0c55096f2ac640e6eb
  $w$cshowsPrec2 ::
    Type.TypeCell -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Type.TypeCell) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Type.Land -> GHC.Base.++ @ GHC.Types.Char Type.$fShowTypeCell5 w1
                   Type.Fly -> GHC.Base.++ @ GHC.Types.Char Type.$fShowTypeCell3 w1
                   Type.Emp
                   -> GHC.Base.++ @ GHC.Types.Char Type.$fShowTypeCell1 w1 }) -}
da01b48d9e1cb6b226c2f8ffc43be0b6
  $wchangeCellInField ::
    Type.Field
    -> GHC.Prim.Int# -> GHC.Types.Int -> Type.Cell -> [[Type.Cell]]
  {- Arity: 4, Strictness: <L,U><S,U><L,1*U(U)><L,U>, Inline: [2],
     Unfolding: (\ (w :: Type.Field)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Type.Cell) ->
                 let {
                   $j :: [Type.Line] -> [Type.Line] -> [[Type.Cell]]
                     <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (beg :: [Type.Line])[OneShot] (end1 :: [Type.Line])[OneShot] ->
                     GHC.Base.++
                       @ [Type.Cell]
                       beg
                       (GHC.Types.:
                          @ [Type.Cell]
                          (case w1 of ww1 { GHC.Types.I# ww2 ->
                           Type.$wchangeCellInLine
                             (case end1 of wild {
                                [] -> GHC.List.badHead @ Type.Line : ipv ipv1 -> ipv })
                             ww2
                             w2 })
                          (case end1 of wild {
                             [] -> GHC.Types.[] @ Type.Line : ipv ipv1 -> ipv1 }))
                 } in
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ [Type.Cell]
                             (GHC.Types.[] @ Type.Line)
                             (GHC.Types.:
                                @ [Type.Cell]
                                (case w1 of ww1 { GHC.Types.I# ww2 ->
                                 Type.$wchangeCellInLine (GHC.List.badHead @ Type.Line) ww2 w2 })
                                (GHC.Types.[] @ Type.Line))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Line], [Type.Line])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Line
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                $j
                                  (GHC.Types.:
                                     @ Type.Line
                                     ipv
                                     (case ds2 of wild2 { (,) xs' xs'' -> xs' }))
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs'' })
                             1#
                             -> $j
                                  (GHC.Types.: @ Type.Line ipv (GHC.Types.[] @ Type.Line))
                                  ipv1 } }
                   1# -> $j (GHC.Types.[] @ Type.Line) w }) -}
096cdfe00c80e538e541794964f22930
  $wchangeCellInLine ::
    Type.Line -> GHC.Prim.Int# -> Type.Cell -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,U><L,U>,
     Inline: [2],
     Unfolding: (\ (w :: Type.Line)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Type.Cell) ->
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ Type.Cell
                             (GHC.Types.[] @ Type.Cell)
                             (GHC.Types.: @ Type.Cell w1 (GHC.Types.[] @ Type.Cell))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Cell], [Type.Cell])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Cell
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ds2 of wild2 { (,) xs' xs'' ->
                                      case xs'' of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 } }))
                                  ipv
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs' })
                             1#
                             -> GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ipv1 of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 }))
                                  ipv
                                  (GHC.Types.[] @ Type.Cell) } }
                   1#
                   -> GHC.Base.++
                        @ Type.Cell
                        (GHC.Types.[] @ Type.Cell)
                        (GHC.Types.:
                           @ Type.Cell
                           w1
                           (case w of wild {
                              [] -> GHC.Types.[] @ Type.Cell : ipv ipv1 -> ipv1 })) }) -}
d2ebb9ca624f07cee0a0a32bdfcbdbf3
  $wgo :: GHC.Prim.Int# -> (# Type.Line, [Type.Line] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>, Inline: [2] -}
4177cca74385f295e3b76fcb80856c57
  $whigherCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.-# wild 1#))
                           ww3 })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
5a293c3d4ed4f5d580e3d3a3ff564f3f
  $wleftCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.-# wild 1#) })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
37abbb434733f41b1b587b4db69fc88d
  $wlowerCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.+# wild 1#))
                           ww3 })
                   14# -> GHC.Maybe.Nothing @ Type.Cell }) -}
cd8f8816bc3bc35bfec3f1024c132671
  $wrightCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.+# wild 1#) })
                   9# -> GHC.Maybe.Nothing @ Type.Cell }) -}
e228461bbcff362ca52d6588cd0a3991
  data Cell
    = Cell {numLine :: GHC.Types.Int,
            numCell :: GHC.Types.Int,
            cellType :: Type.TypeCell,
            cellColor :: Graphics.Gloss.Internals.Data.Color.Color}
a84a815ac9d0a4e801bd442bfa023e94
  type CoordCell = (GHC.Types.Int, GHC.Types.Int)
b3b9710d1bc9d5841b96879fe6ccdd74
  type CoordFigures = [Type.CoordCell]
b6f7599dbdfbf950450e3f9c2089281f
  data End = Game | FirstEnd | OldEnd
e435f101da1e2a00b8af045065ea29d8
  type Field = [Type.Line]
af8412db864a9629e18c4a0ad20c86a2
  data GameState
    = GameState {userName :: GHC.Base.String,
                 gameField :: Type.Field,
                 gameRandomGen :: System.Random.StdGen,
                 gameFigures :: [Type.NumberFigure],
                 gameResult :: GHC.Types.Int,
                 coordTetr :: [Type.CoordFigures],
                 colorTetr :: [Graphics.Gloss.Internals.Data.Color.Color],
                 endGame :: Type.End,
                 rotateTypeFigure :: GHC.Types.Int,
                 numLoop :: GHC.Types.Int}
5902b1243452c2df1880aebbf12007e4
  type Line = [Type.Cell]
ee576e2d2b8f44f9596901e8945ba26f
  type NumberFigure = GHC.Types.Int
e64fdd7b854cd30f2e9dca7436f9636f
  type Result = GHC.Types.Int
afe6a0fb87e0fa0c55096f2ac640e6eb
  data TypeCell = Land | Fly | Emp
e228461bbcff362ca52d6588cd0a3991
  cellColor :: Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds4 }) -}
e228461bbcff362ca52d6588cd0a3991
  cellType :: Type.Cell -> Type.TypeCell
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds3 }) -}
400906687b77b0ac20e32ce973e804f5
  changeCell :: Type.Field -> Type.Cell -> Type.Cell -> Type.Field
  {- Arity: 3,
     Strictness: <L,U><S(S(S)LLL),1*U(1*U(U),1*U(U),A,A)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (oldCell :: Type.Cell)
                   (newCell :: Type.Cell) ->
                 case oldCell of wild { Type.Cell ds ds1 ds2 ds3 ->
                 Type.changeCellInField field ds ds1 newCell }) -}
7cda88d99de21201efa8ad18ca7a4964
  changeCellInField ::
    Type.Field
    -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell -> Type.Field
  {- Arity: 4, Strictness: <L,U><S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Type.Field)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInField w ww1 w2 w3 }) -}
955bf88da22044d7936c3a3eb23d670a
  changeCellInLine ::
    Type.Line -> GHC.Types.Int -> Type.Cell -> Type.Line
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S(S),1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Type.Line) (w1 :: GHC.Types.Int) (w2 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInLine w ww1 w2 }) -}
af8412db864a9629e18c4a0ad20c86a2
  colorTetr ::
    Type.GameState -> [Graphics.Gloss.Internals.Data.Color.Color]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds7 }) -}
af8412db864a9629e18c4a0ad20c86a2
  coordTetr :: Type.GameState -> [Type.CoordFigures]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds6 }) -}
9a9effe73c0937dbbffff73fdc6b19e2
  createColorFigures :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.green
                   Type.createColorFigures1) -}
fe58ec4709bd974e971e0e8dfabd3efe
  createColorFigures1 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures8
                   Type.createColorFigures2) -}
0804850fdda26a6d6728d1191591b91b
  createColorFigures2 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.violet
                   Type.createColorFigures3) -}
6023615c9cddbbf9b82a7aa8f60fe89e
  createColorFigures3 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.red
                   Type.createColorFigures4) -}
3d9f8f13bf0a85acf949e756731d8ff0
  createColorFigures4 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.blue
                   Type.createColorFigures5) -}
536baa2f93e4949c17d9ee2e13eb304d
  createColorFigures5 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.yellow
                   Type.createColorFigures6) -}
2e4688b1fb06df23ca8a84e7b0b56905
  createColorFigures6 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures7
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Color.Color)) -}
7e2a5821964b21af882c60492f691b7c
  createColorFigures7 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.5#
                   0.5#
                   0.5#
                   1.0#) -}
b6a17f0dfddae004e4ecb9302f5b7a37
  createColorFigures8 :: Graphics.Gloss.Internals.Data.Color.Color
  {- Unfolding: (case Graphics.Gloss.Internals.Data.Color.$wclampColor
                        0.2#
                        0.2#
                        1.2#
                        1.0# of ww5 { (#,,,#) ww6 ww7 ww8 ww9 ->
                 case Graphics.Gloss.Internals.Data.Color.$wclampColor
                        (GHC.Prim.plusFloat# ww6 0.2#)
                        (GHC.Prim.plusFloat# ww7 0.2#)
                        (GHC.Prim.plusFloat# ww8 0.2#)
                        ww9 of ww1 { (#,,,#) ww2 ww3 ww4 ww11 ->
                 Graphics.Gloss.Internals.Data.Color.RGBA ww2 ww3 ww4 ww11 } }) -}
a2851bccbf8d35256fcc3e6d09a8401d
  createCoordFigures :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures43
                   Type.createCoordFigures1) -}
cc858c8568b9e488a6c90447c99b07e0
  createCoordFigures1 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures38
                   Type.createCoordFigures2) -}
a5d5dfedb25af519835f1256463bdca4
  createCoordFigures10 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures11
                   (GHC.Types.[] @ Type.CoordCell)) -}
cb61f12027d7f38cb662b6535cd8d422
  createCoordFigures11 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures12)) -}
45d42efc6f4be574259cd203d28b78b1
  createCoordFigures12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
37ab4ebb2eceba0f297d6c7433323eae
  createCoordFigures13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
5f51d0918812b10f8a85c7fbc1ac79e3
  createCoordFigures14 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures15)) -}
91b56e2f22b44203e2305713751abfa3
  createCoordFigures15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
6e7c83ddab3a40a8086300c1bda1b370
  createCoordFigures16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures15)) -}
9629b9441f16288ff122895f7803dde2
  createCoordFigures17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
48376e0b87b0b7b7c0ad934b9ec21c86
  createCoordFigures18 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures15)) -}
4707386f468ece81e4e7f1936307fc0f
  createCoordFigures19 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures20) -}
6fed0bccf719185405e0a735b7dbbdf2
  createCoordFigures2 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures35
                   Type.createCoordFigures3) -}
aaeb680c108c9efbd6c1cb362d33d15f
  createCoordFigures20 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures9) -}
adf964cb4f22cc227e834e7741e3ed15
  createCoordFigures21 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures12)) -}
57c389e78a79820beabbb523d8abe76c
  createCoordFigures22 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures12)) -}
08db794ebc15381fb6f422282c6b6067
  createCoordFigures23 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures24) -}
aa3b720abf94b5ba921917d1ec896dd6
  createCoordFigures24 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures25) -}
3e706fe1c303214300dbef6496c62584
  createCoordFigures25 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures26) -}
fbe67d088a014fe0c76755c9db050577
  createCoordFigures26 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures27
                   (GHC.Types.[] @ Type.CoordCell)) -}
5cb0e4bcde21683bb488a4a5d7b2b449
  createCoordFigures27 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28,
                  Type.createCoordFigures15)) -}
553a953385025b5b7c1a1094becd93f7
  createCoordFigures28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
0c42134d54616417cd9d13f388a45c9a
  createCoordFigures29 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures30) -}
eacb5c022fd70b864015b2aba6d18aa3
  createCoordFigures3 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures29
                   Type.createCoordFigures4) -}
5fb97a4f52f353e0e86088f21fe29848
  createCoordFigures30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures31) -}
b1f87e1c172401ef6ce6701373827365
  createCoordFigures31 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures32) -}
3f51460f8b77e8a297afec3f8b01b476
  createCoordFigures32 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   (GHC.Types.[] @ Type.CoordCell)) -}
50f0963ccc41814ed9a395ee34c6ece8
  createCoordFigures33 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures34)) -}
e09281eceb7c7ae55772e0f4085e819a
  createCoordFigures34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
2b23bb34ed24d01d32de95be43cdfe6f
  createCoordFigures35 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures36) -}
e67d975c8dd6b53e59557a4a62b5d258
  createCoordFigures36 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures37) -}
a253b99335a825e94b7d1671faeb1bea
  createCoordFigures37 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures32) -}
41d1c99b3388d6e7e9508f0c49fcd39d
  createCoordFigures38 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures39) -}
bd07ee9d93340a811a3d6181d7a35d28
  createCoordFigures39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures40) -}
83f7f5ae521699a34b12956ce0c3ca0b
  createCoordFigures4 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures23
                   Type.createCoordFigures5) -}
1d5abec1fab8ce0fc4572012b838ee7a
  createCoordFigures40 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures41) -}
03e998988a14901f1dfba67c4c82c479
  createCoordFigures41 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures42
                   (GHC.Types.[] @ Type.CoordCell)) -}
86716913e2d4d52f5cc15729d49da795
  createCoordFigures42 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures34)) -}
5c1debdf0dc1db2f0e3070bc103da14a
  createCoordFigures43 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures44) -}
d64fc0d823e3cb84b63d9400c5a33c0f
  createCoordFigures44 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures37) -}
9c967615eadc4a29f4001f01e360ad0f
  createCoordFigures5 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures19
                   Type.createCoordFigures6) -}
b1b4cd85b008f7da1710b583710cbc22
  createCoordFigures6 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures7
                   (GHC.Types.[] @ Type.CoordFigures)) -}
5888f719516bcee10f10d53ee70ea2a0
  createCoordFigures7 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures8) -}
133ce647bedf43f5c8697f470ae8c6d7
  createCoordFigures8 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures9) -}
d498ecc244f79ec77e0331d8655d3b0c
  createCoordFigures9 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures10) -}
40bbd413d1fe3a899500b5646daf4743
  createField :: Type.Field
  {- Unfolding: (case Type.$wgo 0# of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ Type.Line ww1 ww2 }) -}
a1da3a2720fe4a184a80621e5bf24189
  createLine :: GHC.Types.Int -> Type.Line
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go :: GHC.Prim.Int# -> [Type.Cell]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Prim.Int#) ->
                     GHC.Types.:
                       @ Type.Cell
                       (Type.Cell
                          x
                          (GHC.Types.I# x1)
                          Type.Emp
                          Graphics.Gloss.Data.Color.white)
                       (case x1 of wild {
                          DEFAULT -> go (GHC.Prim.+# wild 1#)
                          9# -> GHC.Types.[] @ Type.Cell })
                 } in
                 go 0#) -}
9e4960b9494fd54f1e1384f9d433e95f
  createRotateModels :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels109
                   Type.createRotateModels1) -}
a0d530b1f95ce83de152127d4ff63f17
  createRotateModels1 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels108
                   Type.createRotateModels2) -}
f28411f2999242ddfdbf83d6d975fdfa
  createRotateModels10 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels86
                   Type.createRotateModels11) -}
b191d77fad5782bde69b8e62a6723611
  createRotateModels100 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels95,
                  Type.createRotateModels26)) -}
f06150f7762082b4854a996bf92f9e58
  createRotateModels101 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels97,
                  Type.createRotateModels32)) -}
239636ed153ec69a3b956bb73e584d91
  createRotateModels102 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels103,
                  Type.createRotateModels26)) -}
77593edbcb379bad366aaa0c7c0f4bca
  createRotateModels103 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels82) -}
e587163f8bd42c76f8c704d058009213
  createRotateModels104 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels105,
                  Type.createRotateModels32)) -}
eab07f624734ffb457d42e401056c7e2
  createRotateModels105 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels106) -}
add9ec5afc06b4efa5f34c5ebf335a90
  createRotateModels106 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels29) -}
5aa56d28b661453db7c20af621a91f36
  createRotateModels107 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels103,
                  Type.createRotateModels32)) -}
3b8017577d94e99f8710dfd3fca4feb3
  createRotateModels108 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels105,
                  Type.createRotateModels35)) -}
3e1b23cf634dc6d39a89400afe9c0ac0
  createRotateModels109 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels110,
                  Type.createRotateModels41)) -}
ad6da8281f07534c46cccbf65d3efd61
  createRotateModels11 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels84
                   Type.createRotateModels12) -}
91a2b11dbc71454e0321bec7d9024a18
  createRotateModels110 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels111) -}
02d7ab5cd0d30816a2c1bf83b829f43d
  createRotateModels111 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels99) -}
24f926aa50724349144c65964601450d
  createRotateModels12 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels80
                   Type.createRotateModels13) -}
d4db98715ca1dae1dec2aa4c7d89f893
  createRotateModels13 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels79
                   Type.createRotateModels14) -}
564fd71fad776668e7c5841cd231e48e
  createRotateModels14 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels78
                   Type.createRotateModels15) -}
711eba46c7bc05e9ef5d00b73de5d8ab
  createRotateModels15 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels72
                   Type.createRotateModels16) -}
465541bb043868c2b649238abf69c358
  createRotateModels16 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels66
                   Type.createRotateModels17) -}
87bdb4e4d72bfd2928a4df941263b12e
  createRotateModels17 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels63
                   Type.createRotateModels18) -}
f5a25adaaa5caa09f81ab44d57d68398
  createRotateModels18 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels61
                   Type.createRotateModels19) -}
b30d52965ef12c8b424b3b790afbcd75
  createRotateModels19 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels56
                   Type.createRotateModels20) -}
375532dffaed4256715d4ebc4d3d73e5
  createRotateModels2 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels107
                   Type.createRotateModels3) -}
2fb23d8d9680e926b8fb1c14060e67af
  createRotateModels20 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels52
                   Type.createRotateModels21) -}
10c7a4e80d0fa455c59d1e20d8bc7d32
  createRotateModels21 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels47
                   Type.createRotateModels22) -}
c38dc780fc0ff5a11473267cf0cb0da1
  createRotateModels22 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels42
                   Type.createRotateModels23) -}
347d2b646d3b6154aa6b0b7d04e9d703
  createRotateModels23 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels34
                   Type.createRotateModels24) -}
ec82a948ebedb8e756fc656218f49909
  createRotateModels24 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels25
                   (GHC.Types.[] @ (Type.CoordFigures, Type.CoordCell))) -}
043ad5c515683b42f102591bb1ecbfbc
  createRotateModels25 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels27,
                  Type.createRotateModels26)) -}
e77b6ab62eeb88c9b5704a5d13e1591c
  createRotateModels26 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17, Type.$fShowCell2)) -}
e6be5227664b5d935c6bc630cecc41bd
  createRotateModels27 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels28) -}
c3af300c3777aeefba80105e39c506ae
  createRotateModels28 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels29) -}
dca3069d0924a5ec6de3bfdd87aad8ee
  createRotateModels29 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels30) -}
45aaffcc8ea085a2e5b8290cfeef27e0
  createRotateModels3 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels104
                   Type.createRotateModels4) -}
bdfac7886d68a57bfd3329bec7ff0eeb
  createRotateModels30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels31
                   (GHC.Types.[] @ Type.CoordCell)) -}
0c11050fcd3f9584e477f8cadac29fad
  createRotateModels31 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures13)) -}
fcdd975823938026efe1e4a3677d557e
  createRotateModels32 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures17)) -}
3001fad684063fbf7737c40043ae7e48
  createRotateModels33 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures13)) -}
00327ff066c50158c5cef7ef882f720f
  createRotateModels34 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels36,
                  Type.createRotateModels35)) -}
8809f43a5a88422061e7f63825afd10e
  createRotateModels35 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures17)) -}
0183319bb6c5d445d7df10c5fe22aeed
  createRotateModels36 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels37) -}
762ac43993955c181088333ab4d97747
  createRotateModels37 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels38) -}
a828088ad33d6ba4b063a0c521de7cbb
  createRotateModels38 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels39) -}
d7dd4e3b709342261467b4e114c05e88
  createRotateModels39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels40
                   (GHC.Types.[] @ Type.CoordCell)) -}
3eb951e136d65722c33e5a33bc058370
  createRotateModels4 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels102
                   Type.createRotateModels5) -}
bb578786a2c21a4ace9c07ff11703b82
  createRotateModels40 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures17)) -}
461405ee7a38cea6f7911e9797a524a2
  createRotateModels41 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.$fShowCell2)) -}
c90bb238a7bf77c77c1b4dc66f682bd0
  createRotateModels42 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels43,
                  Type.createRotateModels41)) -}
0e32525f529e851f38d1a118f3c97cb5
  createRotateModels43 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels44) -}
8bf606c34b199dfbc5e871219effa99e
  createRotateModels44 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels45) -}
852edf15cbcf483b8ea7f6c2c2cdc65a
  createRotateModels45 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels46) -}
af9aa6cd5574272dd8d761fb60ccc765
  createRotateModels46 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   (GHC.Types.[] @ Type.CoordCell)) -}
e3eba4635ea26ea9ebef21efd8b48a2f
  createRotateModels47 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels49,
                  Type.createRotateModels48)) -}
bab344d46f431d68495dd42c7fdfc8c4
  createRotateModels48 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13, Type.$fShowCell2)) -}
8b829efce9dcafb1e824526c00735f76
  createRotateModels49 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels50) -}
f374945890d325e8778cad03aa73e2b4
  createRotateModels5 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels101
                   Type.createRotateModels6) -}
4138fea989c81e90291e588734e2d965
  createRotateModels50 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels51) -}
856f2aabb3ce675369d0e14d7b7ec680
  createRotateModels51 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   Type.createRotateModels39) -}
f299855c6f00ae5e5b3742d8d9d75242
  createRotateModels52 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels53,
                  Type.createRotateModels33)) -}
fde424d15c4215d2c6a9829d10ccb956
  createRotateModels53 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels54) -}
a4a763ff35a2a0fda0025082253adf3e
  createRotateModels54 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels55) -}
a99a0ef2386d7ef87014ae0b41441af3
  createRotateModels55 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels30) -}
40767a6d7b7dd44c76c1ffbc9af39763
  createRotateModels56 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels57,
                  Type.createRotateModels41)) -}
914908d2cae61d04528b7378000f7776
  createRotateModels57 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels58) -}
f912f1cf16ea2dec6a48449bf147771a
  createRotateModels58 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels59) -}
3d508577666d3fe9089ec2868e3bf99e
  createRotateModels59 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels60) -}
2c0f769c6286fde43b9ee44f733023e6
  createRotateModels6 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels100
                   Type.createRotateModels7) -}
3d642f229c98a93c36e268954c6f2610
  createRotateModels60 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   (GHC.Types.[] @ Type.CoordCell)) -}
da50411d672deb4e34abcfedb4962a0b
  createRotateModels61 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels62,
                  Type.createRotateModels26)) -}
ef0ed8fa1ad7ab612f545f459e3e0316
  createRotateModels62 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels28) -}
73a92692a4383959251857c372990510
  createRotateModels63 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels64,
                  Type.createRotateModels40)) -}
3d67771d16eaf975c3f8dc2923dd5199
  createRotateModels64 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels65) -}
9500304ddf2898ca42b18f3bb95d7644
  createRotateModels65 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels51) -}
560ae129f1a70b7d99c9236b8e36312e
  createRotateModels66 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels67,
                  Type.createRotateModels33)) -}
39c755a9d79e5d96b2f3b2824a767f4b
  createRotateModels67 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels68) -}
28c076d7e61849ab2fe5dab302476db8
  createRotateModels68 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels69) -}
d8e7fe5da7fb1dc24c464731e27a5edd
  createRotateModels69 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels70) -}
817f1cc4189cb33bcd944e27ba63a7e0
  createRotateModels7 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels96
                   Type.createRotateModels8) -}
e8e870a637d3ecac4d48571f1c563a47
  createRotateModels70 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels71
                   (GHC.Types.[] @ Type.CoordCell)) -}
a25632a4c41949e0fe18e9e54cdf89dd
  createRotateModels71 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell2, Type.createCoordFigures28)) -}
f582db380179e833019817c12e3c9733
  createRotateModels72 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels73,
                  Type.createRotateModels26)) -}
c792578e737c17279ceae2dfdb578822
  createRotateModels73 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels74) -}
fb92b51343c4e456a70b9b9c53c5f0e9
  createRotateModels74 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels75) -}
9bbab9a13d402ce7eb4d787e38395205
  createRotateModels75 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   Type.createRotateModels76) -}
cdc2f11a38aa232034b25f66b7412e3b
  createRotateModels76 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels77
                   (GHC.Types.[] @ Type.CoordCell)) -}
7d3155f4a2fa0211c6132acc9b3b9636
  createRotateModels77 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28, Type.$fShowCell2)) -}
ee25a54fe4c76f5e507fd6a08d74ecc2
  createRotateModels78 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels67,
                  Type.createRotateModels35)) -}
0e71c9f8d3b38f3e3b0abb00d760dc41
  createRotateModels79 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels73,
                  Type.createRotateModels48)) -}
b34493fe6115dac15fe9a7ac0b9a1d16
  createRotateModels8 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels94
                   Type.createRotateModels9) -}
46a50048c06d5bea519780c53d2a6b14
  createRotateModels80 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels81,
                  Type.createRotateModels26)) -}
731233a96b7c355f37200c2f330a93a8
  createRotateModels81 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels82) -}
8eb20def5c62812379160aba20fecd73
  createRotateModels82 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels83) -}
2285e1481eaa0af21e57b5a833e72b67
  createRotateModels83 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels60) -}
e5c5e73bc04b8b9a9150ddb9acc77a11
  createRotateModels84 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels85,
                  Type.createRotateModels32)) -}
65c19ae7c3ed53834670631782412fb9
  createRotateModels85 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels28) -}
72ee9989bceaa16ac1e30462bba95b6e
  createRotateModels86 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels87,
                  Type.createRotateModels32)) -}
6d84ccc9e5fab24bdaf1e4861bbe9467
  createRotateModels87 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels88) -}
ed8256e89a7dd99bbd334f0fb021cbdd
  createRotateModels88 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels38) -}
faacaaaebd273328725efb6b95ee49b6
  createRotateModels89 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels90,
                  Type.createRotateModels35)) -}
072b234beee44f4f519b3bb2c19ee303
  createRotateModels9 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels89
                   Type.createRotateModels10) -}
e64c18b22a1cdcfdf95428c76fbbf23f
  createRotateModels90 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels91) -}
7bd7026db562cebe12e91ee8092d6343
  createRotateModels91 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels92) -}
d26bddfa08074e5dc1a19e6d8cc63064
  createRotateModels92 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels93) -}
49b84115a8b4e24a3395e8df7aa22147
  createRotateModels93 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   (GHC.Types.[] @ Type.CoordCell)) -}
21a751a44b877c17918ce465fd1bb55e
  createRotateModels94 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels95,
                  Type.createRotateModels32)) -}
f947693263782b0030b2fdbc3a78770e
  createRotateModels95 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels88) -}
fbf0dbc10d12b5346a8ef44ff69ab630
  createRotateModels96 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels97,
                  Type.createRotateModels35)) -}
bae3f4d562761c84d4d75bf03f4868f6
  createRotateModels97 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels98) -}
bd90ebd8dc677a12e3861c588b2f44f6
  createRotateModels98 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels99) -}
04c474d70971e87ef6cdff524500a172
  createRotateModels99 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels93) -}
af8412db864a9629e18c4a0ad20c86a2
  endGame :: Type.GameState -> Type.End
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds8 }) -}
5fed188e502ac81c904d678614e798b2
  findCellCond ::
    Type.Field
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
f33f511cef4568a2f2fe481bef86bd95
  findCellCondLine ::
    Type.Line
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
444ef147b659e336964d8643bd8950fa
  funFieldAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
a8cf27acd4150e734dc5f038d18e351c
  funFieldAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f2 :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.All <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.All
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f2 y1 of wild2 {
                                     GHC.Types.False
                                     -> GHC.Types.False
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:All[0]))
                                     GHC.Types.True -> go1 ys1 } }
                          } in
                          go1 y }
                 } in
                 go field) -}
14ac2ab090fc403cf2c8a5edf331203c
  funFieldAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
8d6b01c016c682412dc22f3f174741ae
  funFieldAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f2 :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.Any <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.Any
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f2 y1 of wild2 {
                                     GHC.Types.False -> go1 ys1
                                     GHC.Types.True
                                     -> GHC.Types.True
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                          } in
                          go1 y }
                 } in
                 go field) -}
768693d9edc4bc0edd9dd21d08cccba5
  funLineAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
727ad9878d3f762a700a2f659ffbf8a7
  funLineAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f2 :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> case f2 y of wild1 {
                            GHC.Types.False
                            -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                            GHC.Types.True -> go ys } }
                 } in
                 go str1) -}
e1c7bd13239056612dbbdfeb3687b0bf
  funLineAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
157ce7f8f2dbd8e651e0957a0b11c62b
  funLineAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f2 :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> case f2 y of wild1 {
                            GHC.Types.False -> go ys
                            GHC.Types.True
                            -> GHC.Types.True
                                 `cast`
                               (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                 } in
                 go str1) -}
af8412db864a9629e18c4a0ad20c86a2
  gameField :: Type.GameState -> Type.Field
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds2 }) -}
af8412db864a9629e18c4a0ad20c86a2
  gameFigures :: Type.GameState -> [Type.NumberFigure]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds4 }) -}
af8412db864a9629e18c4a0ad20c86a2
  gameRandomGen :: Type.GameState -> System.Random.StdGen
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U(U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds3 }) -}
af8412db864a9629e18c4a0ad20c86a2
  gameResult :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds5 }) -}
888cebdf6d14d2cb61fba13ade7ce773
  getCell ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 GHC.List.$w!!
                   @ Type.Cell
                   (GHC.List.$w!! @ Type.Line field ww3)
                   ww1 } }) -}
4853f46cc57fca24829c05f0daff7004
  getCellColor ::
    Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds3 }) -}
3b081293298cf4b9d5e70d9dd7424cc0
  getCellLine :: Type.Cell -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds }) -}
513bb217d37caf67403906f25c15cafa
  getCellType :: Type.Cell -> Type.TypeCell
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (cell :: Type.Cell) ->
                 case cell of wild { Type.Cell ds ds1 ds2 ds3 -> ds2 }) -}
19a081c76e8b709a9826e11bb3e8c423
  higherCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$whigherCell ww6 ww2 w1 } }) -}
4625d9e60390b3987f08569091ebd455
  leftCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wleftCell ww1 ww6 w1 } }) -}
8b33e6207a6178edaeb62c2c3785e04d
  lowerCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wlowerCell ww6 ww2 w1 } }) -}
b0beb14a7d6891908f91f661d29b07f3
  mapField :: (Type.Cell -> Type.Cell) -> Type.Field -> Type.Field
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
6fc1cd9e250891f57230e97358100ba6
  mapLine :: (Type.Cell -> Type.Cell) -> Type.Line -> Type.Line
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
e228461bbcff362ca52d6588cd0a3991
  numCell :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds2 }) -}
e228461bbcff362ca52d6588cd0a3991
  numLine :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds1 }) -}
af8412db864a9629e18c4a0ad20c86a2
  numLoop :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds10 }) -}
f0be21e80f07b1031e5aaa1b7e2a33ac
  rightCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wrightCell ww1 ww6 w1 } }) -}
af8412db864a9629e18c4a0ad20c86a2
  rotateTypeFigure :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds9 }) -}
5547fa9b1fe6ed5969a9c8c31b7d437a
  typeCellFromField ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> Type.TypeCell
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 case GHC.List.$w!!
                        @ Type.Cell
                        (GHC.List.$w!! @ Type.Line field ww3)
                        ww1 of wild { Type.Cell ds ds1 ds2 ds3 ->
                 ds2 } } }) -}
af8412db864a9629e18c4a0ad20c86a2
  userName :: Type.GameState -> GHC.Base.String
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds1 }) -}
instance GHC.Classes.Eq [Type.End] = Type.$fEqEnd
instance GHC.Classes.Eq [Type.TypeCell] = Type.$fEqTypeCell
instance GHC.Show.Show [Type.Cell] = Type.$fShowCell
instance GHC.Show.Show [Type.End] = Type.$fShowEnd
instance GHC.Show.Show [Type.GameState] = Type.$fShowGameState
instance GHC.Show.Show [Type.TypeCell] = Type.$fShowTypeCell
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

