
==================== FINAL INTERFACE ====================
2019-04-02 12:31:57.262404695 UTC

interface project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an:Type 8063
  interface hash: eacde7ea21389a769aee8dd38482b07d
  ABI hash: 69e542a025064bb32c4d37c465067844
  export-list hash: 4305aacaa18c9dc8978b28e0ec454830
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7a242ffa3d761dff45aed995f1434522
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Type.changeCell
  Type.changeCellInField
  Type.changeCellInLine
  Type.createColorFigures
  Type.createCoordFigures
  Type.createField
  Type.createLine
  Type.createRotateModels
  Type.findCellCond
  Type.findCellCondLine
  Type.funFieldAll
  Type.funFieldAny
  Type.funLineAll
  Type.funLineAny
  Type.getCell
  Type.getCellColor
  Type.getCellLine
  Type.getCellType
  Type.higherCell
  Type.leftCell
  Type.lowerCell
  Type.mapField
  Type.mapLine
  Type.rightCell
  Type.typeCellFromField
  Type.Cell{Type.Cell cellColor cellType numCell numLine}
  Type.CoordCell
  Type.CoordFigures
  Type.Field
  Type.GameState{Type.GameState colorTetr coordTetr endGame gameField gameFigures gameRandomGen gameResult numLoop rotateTypeFigure userName}
  Type.Line
  Type.NumberFigure
  Type.Result
module dependencies: Constans
package dependencies: GLURaw-2.0.0.4 GLUT-2.7.0.14
                      ObjectName-1.1.0.1 OpenGL-3.0.2.2 OpenGLRaw-3.3.2.0
                      StateVar-1.1.1.1 array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      fixed-0.2.1.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 gloss-1.13.0.1
                      gloss-rendering-1.13.0.2 half-0.3 integer-gmp-1.0.2.0
                      pretty-1.1.3.6 random-1.1 stm-2.5.0.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2
orphans: stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic text-1.2.3.1:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type half-0.3:Numeric.Half
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:Debug.Trace 6e89d30f3850c77c707392fc46e9b589
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  gloss-1.13.0.1:Graphics.Gloss dc3d422d35cd32353ee5470deb98e8ac
import  -/  gloss-1.13.0.1:Graphics.Gloss.Data.Color 63b215a24677775cb457045312664a10
import  -/  gloss-rendering-1.13.0.2:Graphics.Gloss.Internals.Data.Color 2716426e7777628bb37f6a888abf7b9e
import  -/  Constans 1487ad15622542e95d86c5deddace10f
  exports: 9c3bf02aef4de5ad20ea7235691d8b63
import  -/  random-1.1:System.Random 8c06dce30a9b8b4f2b7c15fb3f418e08
7b5eee64e5cfbdf155913fb8f6b52292
  $fShowCell :: GHC.Show.Show Type.Cell
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.Cell
                  Type.$fShowCell_$cshowsPrec
                  Type.$fShowCell_$cshow
                  Type.$fShowCell_$cshowList -}
7b5eee64e5cfbdf155913fb8f6b52292
  $fShowCell1 :: Type.Cell -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Unfolding: (\ (w :: Type.Cell) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 Type.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
d8e6d5e0f8db6ef5ee9c6aeb73a3d5dc
  $fShowCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
8ad59cf5af88fd8f57a2ef5a695c862c
  $fShowCell3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cellColor = "#) -}
e49e0ccdf0a84b6ce8943a72a6af38a0
  $fShowCell4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cellType = "#) -}
eb5d715e84e24dad1d7c94909fa8802f
  $fShowCell5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("numCell = "#) -}
daa0311992e9455953b54fab7f9acff1
  $fShowCell6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("numLine = "#) -}
1917b37d06ebfc144ae979d926476a26
  $fShowCell7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cell {"#) -}
bc81885b428232c86b7e31da3cfb4af4
  $fShowCell8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7b5eee64e5cfbdf155913fb8f6b52292
  $fShowCell_$cshow :: Type.Cell -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.Cell) ->
                 Type.$fShowCell_$cshowsPrec
                   Type.$fShowCell8
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7b5eee64e5cfbdf155913fb8f6b52292
  $fShowCell_$cshowList :: [Type.Cell] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.Cell]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.Cell Type.$fShowCell1 ls s) -}
7b5eee64e5cfbdf155913fb8f6b52292
  $fShowCell_$cshowsPrec ::
    GHC.Types.Int -> Type.Cell -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U),U(U),U(U),1*U(U,U,U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Type.Cell) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Type.Cell ww3 ww4 ww5 ww6 ->
                 Type.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
8281b47d2a415f5b18dac47c7056459c
  $fShowGameState :: GHC.Show.Show Type.GameState
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Type.GameState
                  Type.$fShowGameState_$cshowsPrec
                  Type.$fShowGameState_$cshow
                  Type.$fShowGameState_$cshowList -}
8281b47d2a415f5b18dac47c7056459c
  $fShowGameState1 :: Type.GameState -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Type.$fShowGameState_$cshowsPrec Type.$fShowCell8) -}
8281b47d2a415f5b18dac47c7056459c
  $fShowGameState_$cshow :: Type.GameState -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Type.GameState) ->
                 Type.$fShowGameState_$cshowsPrec
                   Type.$fShowCell8
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8281b47d2a415f5b18dac47c7056459c
  $fShowGameState_$cshowList :: [Type.GameState] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Type.GameState]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Type.GameState Type.$fShowGameState1 ls s) -}
8281b47d2a415f5b18dac47c7056459c
  $fShowGameState_$cshowsPrec ::
    GHC.Types.Int -> Type.GameState -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U(U,U),1*U,1*U(U),1*U,1*U,1*U(U),1*U(U),1*U(U))><L,U> -}
b66278e7125e440179bcfe20c31d9e4b
  $tc'Cell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2369569555503978646##
                   3546076993841330935##
                   Type.$trModule
                   Type.$tc'Cell2
                   0#
                   Type.$tc'Cell1) -}
100473571f6e16dac9c2aec217d466fb
  $tc'Cell1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f5fb5b6e976428d456ee74f97a28ed66
  $tc'Cell2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'Cell3) -}
568d761bfdc1bb510f63d58688e7be8d
  $tc'Cell3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cell"#) -}
5d05ad53d9a8ac681c2f50c3eec38ebc
  $tc'GameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2100435522962800206##
                   8447633230906775044##
                   Type.$trModule
                   Type.$tc'GameState2
                   0#
                   Type.$tc'GameState1) -}
215e8f299b97b29c0e0ff9345bee5054
  $tc'GameState1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ac78d682b276088ab7445b253686add9
  $tc'GameState2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tc'GameState3) -}
0690df0421d192e46b417314398618b9
  $tc'GameState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GameState"#) -}
60fc49af8eb34866731fe044f980853f
  $tcCell :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3801954717549597669##
                   5043836793025382721##
                   Type.$trModule
                   Type.$tcCell1
                   0#
                   GHC.Types.krep$*) -}
a4ff2483b7b9ee6506d3daa8c5e1ca63
  $tcCell1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcCell2) -}
8707212698cdb7ee998840e85686d133
  $tcCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cell"#) -}
cb472bbf602250c6caa9af558b1cb923
  $tcGameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11266966231570736974##
                   2925421039485752395##
                   Type.$trModule
                   Type.$tcGameState1
                   0#
                   GHC.Types.krep$*) -}
66bee296bcb19f01f2469cb74592e42f
  $tcGameState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$tcGameState2) -}
04682f0d06a53961aa666729403258d4
  $tcGameState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameState"#) -}
38d9520e039218707b0546bd013919d4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Type.$trModule3 Type.$trModule1) -}
10ee3b6e5d434b7a5b75b2219ce8981f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule2) -}
56e7f65effb97fbfb615a77f77674444
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
9df2574ede9cfe33891f96b5ebf49907
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Type.$trModule4) -}
b37ccd362537d441e3fb680d1eeb2f5b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an"#) -}
d1816d313393549dea85d57160f07706
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Graphics.Gloss.Internals.Data.Color.Color
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,U(U)><L,U(U)><L,U(U)><L,1*U(U,U,U,U)>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Graphics.Gloss.Internals.Data.Color.Color) ->
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = case ww4 of ww5 { Graphics.Gloss.Internals.Data.Color.RGBA ww6 ww7 ww8 ww9 ->
                     Graphics.Gloss.Internals.Data.Color.$w$cshowsPrec
                       0#
                       ww6
                       ww7
                       ww8
                       ww9 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Type.$fShowCell7
                       (GHC.CString.unpackAppendCString#
                          Type.$fShowCell6
                          (case ww1 of ww5 { GHC.Types.I# ww6 ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  ww6
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Type.$fShowCell5
                                        (case ww2 of ww7 { GHC.Types.I# ww8 ->
                                         case GHC.Show.$wshowSignedInt
                                                0#
                                                ww8
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      Type.$fShowCell4
                                                      (case ww3 of ww9 { GHC.Types.I# ww10 ->
                                                       case GHC.Show.$wshowSignedInt
                                                              0#
                                                              ww10
                                                              (GHC.Base.++
                                                                 @ GHC.Types.Char
                                                                 GHC.Show.showCommaSpace1
                                                                 (GHC.CString.unpackAppendCString#
                                                                    Type.$fShowCell3
                                                                    (f2
                                                                       (GHC.CString.unpackAppendCString#
                                                                          Type.$fShowCell2
                                                                          x)))) of ww11 { (#,#) ww12 ww13 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww12
                                                         ww13 } }))) of ww9 { (#,#) ww10 ww11 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww10
                                           ww11 } }))) of ww7 { (#,#) ww8 ww9 ->
                           GHC.Types.: @ GHC.Types.Char ww8 ww9 } }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
34386613df7b49a9884d7cab1699a78c
  $wchangeCellInField ::
    Type.Field
    -> GHC.Prim.Int# -> GHC.Types.Int -> Type.Cell -> [[Type.Cell]]
  {- Arity: 4, Strictness: <L,U><S,U><L,1*U(U)><L,U>, Inline: [2],
     Unfolding: (\ (w :: Type.Field)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Type.Cell) ->
                 let {
                   $j :: [Type.Line] -> [Type.Line] -> [[Type.Cell]]
                     <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (beg :: [Type.Line])[OneShot] (end1 :: [Type.Line])[OneShot] ->
                     GHC.Base.++
                       @ [Type.Cell]
                       beg
                       (GHC.Types.:
                          @ [Type.Cell]
                          (case w1 of ww1 { GHC.Types.I# ww2 ->
                           Type.$wchangeCellInLine
                             (case end1 of wild {
                                [] -> GHC.List.badHead @ Type.Line : ipv ipv1 -> ipv })
                             ww2
                             w2 })
                          (case end1 of wild {
                             [] -> GHC.Types.[] @ Type.Line : ipv ipv1 -> ipv1 }))
                 } in
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ [Type.Cell]
                             (GHC.Types.[] @ Type.Line)
                             (GHC.Types.:
                                @ [Type.Cell]
                                (case w1 of ww1 { GHC.Types.I# ww2 ->
                                 Type.$wchangeCellInLine (GHC.List.badHead @ Type.Line) ww2 w2 })
                                (GHC.Types.[] @ Type.Line))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Line], [Type.Line])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Line
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                $j
                                  (GHC.Types.:
                                     @ Type.Line
                                     ipv
                                     (case ds2 of wild2 { (,) xs' xs'' -> xs' }))
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs'' })
                             1#
                             -> $j
                                  (GHC.Types.: @ Type.Line ipv (GHC.Types.[] @ Type.Line))
                                  ipv1 } }
                   1# -> $j (GHC.Types.[] @ Type.Line) w }) -}
837ecb1f27203c575857eca10538d487
  $wchangeCellInLine ::
    Type.Line -> GHC.Prim.Int# -> Type.Cell -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,U><L,U>,
     Inline: [2],
     Unfolding: (\ (w :: Type.Line)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Type.Cell) ->
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        []
                        -> GHC.Base.++
                             @ Type.Cell
                             (GHC.Types.[] @ Type.Cell)
                             (GHC.Types.: @ Type.Cell w1 (GHC.Types.[] @ Type.Cell))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Type.Cell], [Type.Cell])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Type.Cell
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ds2 of wild2 { (,) xs' xs'' ->
                                      case xs'' of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 } }))
                                  ipv
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs' })
                             1#
                             -> GHC.Base.++_$s++
                                  @ Type.Cell
                                  (GHC.Types.:
                                     @ Type.Cell
                                     w1
                                     (case ipv1 of wild1 {
                                        [] -> GHC.Types.[] @ Type.Cell : ipv2 ipv3 -> ipv3 }))
                                  ipv
                                  (GHC.Types.[] @ Type.Cell) } }
                   1#
                   -> GHC.Base.++
                        @ Type.Cell
                        (GHC.Types.[] @ Type.Cell)
                        (GHC.Types.:
                           @ Type.Cell
                           w1
                           (case w of wild {
                              [] -> GHC.Types.[] @ Type.Cell : ipv ipv1 -> ipv1 })) }) -}
6a5a6d2f6584d73491b266b903a81a01
  $wgo :: GHC.Prim.Int# -> (# Type.Line, [Type.Line] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>, Inline: [2] -}
ebf152bf8d9f48977e4dcce0a5189319
  $whigherCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.-# wild 1#))
                           ww3 })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
0f5a8087be04ace09f6dbec02abb54e5
  $wleftCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.-# wild 1#) })
                   0# -> GHC.Maybe.Nothing @ Type.Cell }) -}
6d73e3d0594471a66c1fc90e603492b7
  $wlowerCell ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: Type.Field) ->
                 case ww of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w (GHC.Prim.+# wild 1#))
                           ww3 })
                   14# -> GHC.Maybe.Nothing @ Type.Cell }) -}
979985641adc915f5e1956adf6147296
  $wrightCell ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: Type.Field) ->
                 case ww1 of wild {
                   DEFAULT
                   -> GHC.Maybe.Just
                        @ Type.Cell
                        (case ww of ww2 { GHC.Types.I# ww3 ->
                         GHC.List.$w!!
                           @ Type.Cell
                           (GHC.List.$w!! @ Type.Line w ww3)
                           (GHC.Prim.+# wild 1#) })
                   9# -> GHC.Maybe.Nothing @ Type.Cell }) -}
7b5eee64e5cfbdf155913fb8f6b52292
  data Cell
    = Cell {numLine :: GHC.Types.Int,
            numCell :: GHC.Types.Int,
            cellType :: GHC.Types.Int,
            cellColor :: Graphics.Gloss.Internals.Data.Color.Color}
a84a815ac9d0a4e801bd442bfa023e94
  type CoordCell = (GHC.Types.Int, GHC.Types.Int)
b3b9710d1bc9d5841b96879fe6ccdd74
  type CoordFigures = [Type.CoordCell]
51bd1e0ed49ff3348029661cfe5d0e90
  type Field = [Type.Line]
8281b47d2a415f5b18dac47c7056459c
  data GameState
    = GameState {userName :: GHC.Base.String,
                 gameField :: Type.Field,
                 gameRandomGen :: System.Random.StdGen,
                 gameFigures :: [Type.NumberFigure],
                 gameResult :: GHC.Types.Int,
                 coordTetr :: [Type.CoordFigures],
                 colorTetr :: [Graphics.Gloss.Internals.Data.Color.Color],
                 endGame :: GHC.Types.Int,
                 rotateTypeFigure :: GHC.Types.Int,
                 numLoop :: GHC.Types.Int}
2e70093aa927aca9064b822e8b9318cc
  type Line = [Type.Cell]
ee576e2d2b8f44f9596901e8945ba26f
  type NumberFigure = GHC.Types.Int
e64fdd7b854cd30f2e9dca7436f9636f
  type Result = GHC.Types.Int
7b5eee64e5cfbdf155913fb8f6b52292
  cellColor :: Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds4 }) -}
7b5eee64e5cfbdf155913fb8f6b52292
  cellType :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds3 }) -}
7cdc5e992f8724a6bcd36efc665a67a4
  changeCell :: Type.Field -> Type.Cell -> Type.Cell -> Type.Field
  {- Arity: 3,
     Strictness: <L,U><S(S(S)LLL),1*U(1*U(U),1*U(U),A,A)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (oldCell :: Type.Cell)
                   (newCell :: Type.Cell) ->
                 case oldCell of wild { Type.Cell ds ds1 ds2 ds3 ->
                 Type.changeCellInField field ds ds1 newCell }) -}
52d5b36e05770e075285498a40e7590c
  changeCellInField ::
    Type.Field
    -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell -> Type.Field
  {- Arity: 4, Strictness: <L,U><S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Type.Field)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInField w ww1 w2 w3 }) -}
7c14219a0517b93ebd577b56679a2783
  changeCellInLine ::
    Type.Line -> GHC.Types.Int -> Type.Cell -> Type.Line
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S(S),1*U(U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Type.Line) (w1 :: GHC.Types.Int) (w2 :: Type.Cell) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Type.$wchangeCellInLine w ww1 w2 }) -}
8281b47d2a415f5b18dac47c7056459c
  colorTetr ::
    Type.GameState -> [Graphics.Gloss.Internals.Data.Color.Color]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds7 }) -}
8281b47d2a415f5b18dac47c7056459c
  coordTetr :: Type.GameState -> [Type.CoordFigures]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds6 }) -}
9a9effe73c0937dbbffff73fdc6b19e2
  createColorFigures :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.green
                   Type.createColorFigures1) -}
fe58ec4709bd974e971e0e8dfabd3efe
  createColorFigures1 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures8
                   Type.createColorFigures2) -}
0804850fdda26a6d6728d1191591b91b
  createColorFigures2 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.violet
                   Type.createColorFigures3) -}
6023615c9cddbbf9b82a7aa8f60fe89e
  createColorFigures3 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.red
                   Type.createColorFigures4) -}
3d9f8f13bf0a85acf949e756731d8ff0
  createColorFigures4 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.blue
                   Type.createColorFigures5) -}
536baa2f93e4949c17d9ee2e13eb304d
  createColorFigures5 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Graphics.Gloss.Data.Color.yellow
                   Type.createColorFigures6) -}
2e4688b1fb06df23ca8a84e7b0b56905
  createColorFigures6 :: [Graphics.Gloss.Internals.Data.Color.Color]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Color.Color
                   Type.createColorFigures7
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Color.Color)) -}
7e2a5821964b21af882c60492f691b7c
  createColorFigures7 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.5#
                   0.5#
                   0.5#
                   1.0#) -}
b6a17f0dfddae004e4ecb9302f5b7a37
  createColorFigures8 :: Graphics.Gloss.Internals.Data.Color.Color
  {- Unfolding: (case Graphics.Gloss.Internals.Data.Color.$wclampColor
                        0.2#
                        0.2#
                        1.2#
                        1.0# of ww5 { (#,,,#) ww6 ww7 ww8 ww9 ->
                 case Graphics.Gloss.Internals.Data.Color.$wclampColor
                        (GHC.Prim.plusFloat# ww6 0.2#)
                        (GHC.Prim.plusFloat# ww7 0.2#)
                        (GHC.Prim.plusFloat# ww8 0.2#)
                        ww9 of ww1 { (#,,,#) ww2 ww3 ww4 ww11 ->
                 Graphics.Gloss.Internals.Data.Color.RGBA ww2 ww3 ww4 ww11 } }) -}
c6aeabd63007d112aff70ef8b7e46514
  createCoordFigures :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures43
                   Type.createCoordFigures1) -}
17dc64d1f5a90d62f8ff9d23b0372fe7
  createCoordFigures1 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures38
                   Type.createCoordFigures2) -}
a5d5dfedb25af519835f1256463bdca4
  createCoordFigures10 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures11
                   (GHC.Types.[] @ Type.CoordCell)) -}
cb61f12027d7f38cb662b6535cd8d422
  createCoordFigures11 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures12)) -}
45d42efc6f4be574259cd203d28b78b1
  createCoordFigures12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
37ab4ebb2eceba0f297d6c7433323eae
  createCoordFigures13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
5f51d0918812b10f8a85c7fbc1ac79e3
  createCoordFigures14 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures15)) -}
91b56e2f22b44203e2305713751abfa3
  createCoordFigures15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
6e7c83ddab3a40a8086300c1bda1b370
  createCoordFigures16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures15)) -}
9629b9441f16288ff122895f7803dde2
  createCoordFigures17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
e39d166cc248a158dd62ebdfbdc34696
  createCoordFigures18 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures15)) -}
980d7276ad88736ccea6fb3a9441f2da
  createCoordFigures19 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures20) -}
c811f90968c4f8217130513043775b38
  createCoordFigures2 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures35
                   Type.createCoordFigures3) -}
aaeb680c108c9efbd6c1cb362d33d15f
  createCoordFigures20 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures9) -}
adf964cb4f22cc227e834e7741e3ed15
  createCoordFigures21 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures12)) -}
0d8c4e0350b476efc4ec951395603294
  createCoordFigures22 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures12)) -}
a2905757f56129ff84eb86f63303d6c8
  createCoordFigures23 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures24) -}
aa3b720abf94b5ba921917d1ec896dd6
  createCoordFigures24 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures25) -}
3e706fe1c303214300dbef6496c62584
  createCoordFigures25 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures26) -}
fbe67d088a014fe0c76755c9db050577
  createCoordFigures26 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures27
                   (GHC.Types.[] @ Type.CoordCell)) -}
5cb0e4bcde21683bb488a4a5d7b2b449
  createCoordFigures27 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28,
                  Type.createCoordFigures15)) -}
553a953385025b5b7c1a1094becd93f7
  createCoordFigures28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
5bb5a4f493fa138978839bb9e52feb75
  createCoordFigures29 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures30) -}
e40c226509029b6dd1cdc13be66fbe33
  createCoordFigures3 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures29
                   Type.createCoordFigures4) -}
977f0f12de6640bae4d71d76784f0641
  createCoordFigures30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures31) -}
6151372bc6dd4aa88fa1e2b2c021d531
  createCoordFigures31 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures32) -}
3f51460f8b77e8a297afec3f8b01b476
  createCoordFigures32 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   (GHC.Types.[] @ Type.CoordCell)) -}
ec65d613bb12a0fd5bb498765c2f0188
  createCoordFigures33 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures34)) -}
e09281eceb7c7ae55772e0f4085e819a
  createCoordFigures34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
0552b3e2b2446fe127db414411e2fdc7
  createCoordFigures35 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures36) -}
fb74204248c37489d3266741a0a4d817
  createCoordFigures36 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures33
                   Type.createCoordFigures37) -}
a253b99335a825e94b7d1671faeb1bea
  createCoordFigures37 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures32) -}
8df58521a42eefa453bdcdb0b9a5a470
  createCoordFigures38 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures39) -}
7794044744f5fcd261056a650e6a83c3
  createCoordFigures39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures40) -}
fb2872b35e2a1ede9600fcc575ca27e4
  createCoordFigures4 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures23
                   Type.createCoordFigures5) -}
1d5abec1fab8ce0fc4572012b838ee7a
  createCoordFigures40 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures21
                   Type.createCoordFigures41) -}
03e998988a14901f1dfba67c4c82c479
  createCoordFigures41 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures42
                   (GHC.Types.[] @ Type.CoordCell)) -}
86716913e2d4d52f5cc15729d49da795
  createCoordFigures42 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures34)) -}
9974717871a5f14f94856f5e1b7c018d
  createCoordFigures43 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures44) -}
e8712226b128ad79dde17eeb6f65dc83
  createCoordFigures44 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures22
                   Type.createCoordFigures37) -}
3594ead13a9abe52484f58e9af3783fd
  createCoordFigures5 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures19
                   Type.createCoordFigures6) -}
9732b74a2a05b1674e2fe71893386563
  createCoordFigures6 :: [Type.CoordFigures]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordFigures
                   Type.createCoordFigures7
                   (GHC.Types.[] @ Type.CoordFigures)) -}
8fe90f9e0cf75bc8c265ca506ff36a08
  createCoordFigures7 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures18
                   Type.createCoordFigures8) -}
133ce647bedf43f5c8697f470ae8c6d7
  createCoordFigures8 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures16
                   Type.createCoordFigures9) -}
d498ecc244f79ec77e0331d8655d3b0c
  createCoordFigures9 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createCoordFigures14
                   Type.createCoordFigures10) -}
c92582258034c2f73ff81b27d5d36ca6
  createField :: Type.Field
  {- Unfolding: (case Type.$wgo 0# of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ Type.Line ww1 ww2 }) -}
9f81b86ca2d452c5f7c4c785d3b9df95
  createLine :: GHC.Types.Int -> Type.Line
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go :: GHC.Prim.Int# -> [Type.Cell]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Prim.Int#) ->
                     GHC.Types.:
                       @ Type.Cell
                       (Type.Cell
                          x
                          (GHC.Types.I# x1)
                          Type.createCoordFigures13
                          Graphics.Gloss.Data.Color.white)
                       (case x1 of wild {
                          DEFAULT -> go (GHC.Prim.+# wild 1#)
                          9# -> GHC.Types.[] @ Type.Cell })
                 } in
                 go 0#) -}
af3d313dfe42e047578fe9c9778d31f1
  createRotateModels :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels109
                   Type.createRotateModels1) -}
50bc2f0f8eaad0a325c5001b6384a365
  createRotateModels1 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels108
                   Type.createRotateModels2) -}
266826882a63bd659af3bf5393dbdd0c
  createRotateModels10 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels86
                   Type.createRotateModels11) -}
8fbd9adf365158117457fe24ad30a2d2
  createRotateModels100 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels95,
                  Type.createRotateModels26)) -}
e43a57263156977b467d52016d41e2a3
  createRotateModels101 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels97,
                  Type.createRotateModels32)) -}
1ca1631f7dc6a540f47008d3e9d00c73
  createRotateModels102 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels103,
                  Type.createRotateModels26)) -}
bd3f9fd4ba72ecfd65a7b0171dfa78d5
  createRotateModels103 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels82) -}
de9ec9c7f94d56b9e50574ba95f890e4
  createRotateModels104 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels105,
                  Type.createRotateModels32)) -}
c386fcae5f0288f8eac5b7469cd46d9d
  createRotateModels105 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels106) -}
4c09f821c68b346c9068ca8a5a3e07c3
  createRotateModels106 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels29) -}
0f6ad3009504598d698d364fb7b1e886
  createRotateModels107 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels103,
                  Type.createRotateModels32)) -}
316f195ae5856ef32a4eeba9b0f3f542
  createRotateModels108 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels105,
                  Type.createRotateModels35)) -}
1dd5a7f701b2d8c37f1df35042a3bbe2
  createRotateModels109 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels110,
                  Type.createRotateModels41)) -}
6a3a84c69fbcc4115c5864bebf5ed8a9
  createRotateModels11 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels84
                   Type.createRotateModels12) -}
7bc434407a075eb08025e69818ce8d77
  createRotateModels110 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels111) -}
5b33b4baffaa9871860353646999d6ff
  createRotateModels111 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels99) -}
771ec29d2e225145866ccdd302e040c6
  createRotateModels12 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels80
                   Type.createRotateModels13) -}
b87664688ac23516460fe056e0452629
  createRotateModels13 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels79
                   Type.createRotateModels14) -}
6790fafde77fe19d1a17d7a341483735
  createRotateModels14 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels78
                   Type.createRotateModels15) -}
0332ceef5f86332ddc07598b045f8c03
  createRotateModels15 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels72
                   Type.createRotateModels16) -}
22e3d9870beeb4044959e052261cb015
  createRotateModels16 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels66
                   Type.createRotateModels17) -}
2e93fdc358892c9684eb69ff69f1ae87
  createRotateModels17 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels63
                   Type.createRotateModels18) -}
3bdc492f0f2208d0b03e4554c303955d
  createRotateModels18 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels61
                   Type.createRotateModels19) -}
73c78719d5686b2f4a64d44417080337
  createRotateModels19 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels56
                   Type.createRotateModels20) -}
f38ac4a1edb8254a084d844bfac9ded0
  createRotateModels2 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels107
                   Type.createRotateModels3) -}
e6395bae570286883f2f91e4683df647
  createRotateModels20 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels52
                   Type.createRotateModels21) -}
6ee88940f7b082deb7f8f2dd65f943ee
  createRotateModels21 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels47
                   Type.createRotateModels22) -}
004555c046ccecbb3d059ad594d5d4f8
  createRotateModels22 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels42
                   Type.createRotateModels23) -}
8a90ece619c7bca88d746b1a301030a2
  createRotateModels23 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels34
                   Type.createRotateModels24) -}
d6a3b159d9582afd2e101332ad72fc4b
  createRotateModels24 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels25
                   (GHC.Types.[] @ (Type.CoordFigures, Type.CoordCell))) -}
ab28fd7c92f8572e317159939f093438
  createRotateModels25 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels27,
                  Type.createRotateModels26)) -}
231d80eb34b0669c03936511635285e9
  createRotateModels26 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17, Type.$fShowCell8)) -}
71d60229ea6c8b47e5cb36ed8a522c54
  createRotateModels27 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels28) -}
a3ed0e07c4cdf2f46f110e7f1f17c7f9
  createRotateModels28 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels29) -}
dca3069d0924a5ec6de3bfdd87aad8ee
  createRotateModels29 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels30) -}
075a00650e9d0366ac5042859ae6d231
  createRotateModels3 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels104
                   Type.createRotateModels4) -}
bdfac7886d68a57bfd3329bec7ff0eeb
  createRotateModels30 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels31
                   (GHC.Types.[] @ Type.CoordCell)) -}
0c11050fcd3f9584e477f8cadac29fad
  createRotateModels31 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures13)) -}
fcdd975823938026efe1e4a3677d557e
  createRotateModels32 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures17,
                  Type.createCoordFigures17)) -}
94b44e61e91e2ca78f6317335c59d447
  createRotateModels33 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures13)) -}
aeea793b80cf419c357892835aff9715
  createRotateModels34 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels36,
                  Type.createRotateModels35)) -}
74b235e56ab43e5747c4815976e29744
  createRotateModels35 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures17)) -}
a111229913e1826264eac7a225951d35
  createRotateModels36 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels37) -}
539d470cf4f196d193661cb5ec365f05
  createRotateModels37 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels38) -}
a828088ad33d6ba4b063a0c521de7cbb
  createRotateModels38 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels39) -}
d7dd4e3b709342261467b4e114c05e88
  createRotateModels39 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels40
                   (GHC.Types.[] @ Type.CoordCell)) -}
22372e63c81eada07a3f1c32398a18ba
  createRotateModels4 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels102
                   Type.createRotateModels5) -}
bb578786a2c21a4ace9c07ff11703b82
  createRotateModels40 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13,
                  Type.createCoordFigures17)) -}
5a6c6acd7191d957c9a2b8ef6b5b9c2f
  createRotateModels41 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.$fShowCell8)) -}
037bc65d6b56154dd9ca369d6f8e0876
  createRotateModels42 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels43,
                  Type.createRotateModels41)) -}
37bb0e6d0fc176134ed741989d7dbdd2
  createRotateModels43 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels44) -}
fd6a0a5adfce69eaa420ccce799f0522
  createRotateModels44 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels45) -}
de849b6e76b9e36ffa4ad762c1435684
  createRotateModels45 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels46) -}
a96a27373efb56833937e2c88c0af5cf
  createRotateModels46 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   (GHC.Types.[] @ Type.CoordCell)) -}
60af949eace2cdd13893e4e27310bad1
  createRotateModels47 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels49,
                  Type.createRotateModels48)) -}
b83179632e35b83b040dad2818f7dde4
  createRotateModels48 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures13, Type.$fShowCell8)) -}
05b1a137bfb3eaa96daba2d3e6484b4c
  createRotateModels49 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels50) -}
cfd4b1e64b65dd6e434fc808c898e50c
  createRotateModels5 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels101
                   Type.createRotateModels6) -}
0d4bc9777cbe1e0cecdcf4fe4542625e
  createRotateModels50 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels51) -}
a2a24cf2b51d037b8a0ce64a0c578cab
  createRotateModels51 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   Type.createRotateModels39) -}
8c72b32f210570ee0d3c8d0483bcc0d7
  createRotateModels52 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels53,
                  Type.createRotateModels33)) -}
4848fcd74c4caf0d5ca0830949bcd53f
  createRotateModels53 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels54) -}
98c5122eb567cadb8b3d1b9b1760a6d5
  createRotateModels54 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels55) -}
a42139a39dea57bdccca5f364f62048a
  createRotateModels55 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels30) -}
43b2708936d79d77f4ee429ee2274574
  createRotateModels56 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels57,
                  Type.createRotateModels41)) -}
1a5cabf15b1f80b13b63481deb6bcbcb
  createRotateModels57 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels58) -}
92af2f117e306340a4a84d77d00c6cb7
  createRotateModels58 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels59) -}
7e01bf1e5c6596f0309c47b7f2721683
  createRotateModels59 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels60) -}
ad914e8fb09783d72cc94480f99e2fe3
  createRotateModels6 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels100
                   Type.createRotateModels7) -}
4167589651fbe080526b2b0693dd29ca
  createRotateModels60 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   (GHC.Types.[] @ Type.CoordCell)) -}
872101fe068de1e009e65469cc341871
  createRotateModels61 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels62,
                  Type.createRotateModels26)) -}
7e59a4f1786f4fe152c06166796d460d
  createRotateModels62 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels28) -}
fdbce102b8abf5032f8051122ca21a46
  createRotateModels63 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels64,
                  Type.createRotateModels40)) -}
e262597b94dc6d4c62df2d331b07aeb0
  createRotateModels64 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels65) -}
1d14fe290204477388604dfdc3d9438f
  createRotateModels65 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels51) -}
39e5bb97052702d71ce6c483d55cbce5
  createRotateModels66 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels67,
                  Type.createRotateModels33)) -}
a36400fd7bb7998e51c9a7e3e15e2528
  createRotateModels67 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels68) -}
fa358f3e0fb743afaea75cc5a99276e3
  createRotateModels68 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels69) -}
bf0817f02bd78a26cbc3832c7881bb1c
  createRotateModels69 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels70) -}
8827533c67d7a1e179e3cd9a19124b9e
  createRotateModels7 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels96
                   Type.createRotateModels8) -}
7d2158a7bdc5ece93c04dda401fe17f6
  createRotateModels70 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels71
                   (GHC.Types.[] @ Type.CoordCell)) -}
3de186a75c2c6ca0d0f6d7a89559fc3a
  createRotateModels71 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.$fShowCell8, Type.createCoordFigures28)) -}
4efa9409245e47d20d0fe4241dcdb6c3
  createRotateModels72 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels73,
                  Type.createRotateModels26)) -}
64ece696f3686329a4341efe75b60ad8
  createRotateModels73 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels74) -}
14d9d443aa21253658a83da221dfc4a5
  createRotateModels74 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels75) -}
7a0b520d21677593476277467389282c
  createRotateModels75 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels48
                   Type.createRotateModels76) -}
f9afeede9476c57784e20b77fd1c8625
  createRotateModels76 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels77
                   (GHC.Types.[] @ Type.CoordCell)) -}
05c0907e3d386e6f4875dd834ae14e1c
  createRotateModels77 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createCoordFigures28, Type.$fShowCell8)) -}
f0d273df096272c2037bdc14332d70d6
  createRotateModels78 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels67,
                  Type.createRotateModels35)) -}
c3f9329304451fe6f03881654bc38adf
  createRotateModels79 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels73,
                  Type.createRotateModels48)) -}
6d55d1db0318c2f7029ed7037b472513
  createRotateModels8 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels94
                   Type.createRotateModels9) -}
80ff2a504b6420ed396595c3449507e3
  createRotateModels80 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels81,
                  Type.createRotateModels26)) -}
feaa895ddeb7695d859a4667fb897675
  createRotateModels81 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels82) -}
55716906edbb40a6956888bc0acd23f4
  createRotateModels82 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels83) -}
bab8e82b69981b45a3439e915f9f5e34
  createRotateModels83 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   Type.createRotateModels60) -}
169a550df86ec5dc03eafebbfa19dbf1
  createRotateModels84 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels85,
                  Type.createRotateModels32)) -}
41efa9ca8796e7b72ec17158513f5898
  createRotateModels85 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels28) -}
4a95c35ad91b3da0bd75672effe7ceda
  createRotateModels86 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels87,
                  Type.createRotateModels32)) -}
2be28c48013c38215371dadb9f3b4323
  createRotateModels87 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels88) -}
ea45cb139ffd00dbeb86adc0fab0ebb9
  createRotateModels88 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels38) -}
fa1e5c61855b9922cbf7d4f11e3c36e6
  createRotateModels89 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels90,
                  Type.createRotateModels35)) -}
b610c78a1248707e3e2729ad4a9a5f0e
  createRotateModels9 :: [(Type.CoordFigures, Type.CoordCell)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Type.CoordFigures, Type.CoordCell)
                   Type.createRotateModels89
                   Type.createRotateModels10) -}
b9e4eba87e0597d506cb825692e31e0f
  createRotateModels90 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels91) -}
d02cd18ed754a471b29fe3aa8882d1ca
  createRotateModels91 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels92) -}
e09002585c9b193d6e80d4228489b01b
  createRotateModels92 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels93) -}
49b84115a8b4e24a3395e8df7aa22147
  createRotateModels93 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels32
                   (GHC.Types.[] @ Type.CoordCell)) -}
8bac9ca014485305d61a87b3d34961a6
  createRotateModels94 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels95,
                  Type.createRotateModels32)) -}
9ba0354b789dc774ea707cc59d4ac3dc
  createRotateModels95 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels41
                   Type.createRotateModels88) -}
16449c41be35a2f873accfe3e726f541
  createRotateModels96 ::
    ([Type.CoordCell], (GHC.Types.Int, GHC.Types.Int))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Type.createRotateModels97,
                  Type.createRotateModels35)) -}
708826bbc1b24f4f591ff26f13a4ecb2
  createRotateModels97 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels35
                   Type.createRotateModels98) -}
5e7195f246deaf34a192cb123f67e3af
  createRotateModels98 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels33
                   Type.createRotateModels99) -}
d7a8cc0d82841d9614d5b07fe75fdd2a
  createRotateModels99 :: [Type.CoordCell]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Type.CoordCell
                   Type.createRotateModels26
                   Type.createRotateModels93) -}
8281b47d2a415f5b18dac47c7056459c
  endGame :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds8 }) -}
9272842dffe03e78d8b0eaa08c533c45
  findCellCond ::
    Type.Field
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
bb414f25dfc931e1366ef294d6cf651f
  findCellCondLine ::
    Type.Line
    -> (Type.Cell -> GHC.Types.Bool) -> [Type.Cell] -> [Type.Cell]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><S,1*U> -}
fdc4ba453f90205fc5bffd9ebe49f735
  funFieldAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
15d99c903a7556538159431d3a05e9bb
  funFieldAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f2 :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.All <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.All
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f2 y1 of wild2 {
                                     GHC.Types.False
                                     -> GHC.Types.False
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:All[0]))
                                     GHC.Types.True -> go1 ys1 } }
                          } in
                          go1 y }
                 } in
                 go field) -}
0ee659ee0c80fc62b9ebc53c40cd61d4
  funFieldAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Field -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funFieldAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Field>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
f282bd1df157b295a9cdb16a9348f239
  funFieldAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Field -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ (f2 :: Type.Cell -> GHC.Types.Bool)
                   (field :: Type.Field) ->
                 letrec {
                   go :: [Type.Line] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Type.Line]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> let {
                            exit :: Data.Semigroup.Internal.Any <join 0> = go ys
                          } in
                          letrec {
                            go1 :: [Type.Cell] -> Data.Semigroup.Internal.Any
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Type.Cell]) ->
                              case ds1 of wild1 {
                                [] -> exit
                                : y1 ys1
                                -> case f2 y1 of wild2 {
                                     GHC.Types.False -> go1 ys1
                                     GHC.Types.True
                                     -> GHC.Types.True
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                          } in
                          go1 y }
                 } in
                 go field) -}
6138127fde49a91fc9d79f4dfe23b96e
  funLineAll ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAll1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:All[0]) -}
b523bde61c8908287a07c890bb262abb
  funLineAll1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.All
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f2 :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> case f2 y of wild1 {
                            GHC.Types.False
                            -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                            GHC.Types.True -> go ys } }
                 } in
                 go str1) -}
f45eff1102a3d7506c9f9746e5390e48
  funLineAny ::
    (Type.Cell -> GHC.Types.Bool) -> Type.Line -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Type.funLineAny1
                  `cast`
                (<Type.Cell -> GHC.Types.Bool>_R
                 ->_R <Type.Line>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
d1ff782d20e0b9c3bb937d96f7dd9cf7
  funLineAny1 ::
    (Type.Cell -> GHC.Types.Bool)
    -> Type.Line -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f2 :: Type.Cell -> GHC.Types.Bool) (str1 :: Type.Line) ->
                 letrec {
                   go :: [Type.Cell] -> Data.Semigroup.Internal.Any
                     <join 1> {- Arity: 1 -}
                   = \ (ds :: [Type.Cell]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                       : y ys
                       -> case f2 y of wild1 {
                            GHC.Types.False -> go ys
                            GHC.Types.True
                            -> GHC.Types.True
                                 `cast`
                               (Sym (Data.Semigroup.Internal.N:Any[0])) } }
                 } in
                 go str1) -}
8281b47d2a415f5b18dac47c7056459c
  gameField :: Type.GameState -> Type.Field
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds2 }) -}
8281b47d2a415f5b18dac47c7056459c
  gameFigures :: Type.GameState -> [Type.NumberFigure]
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds4 }) -}
8281b47d2a415f5b18dac47c7056459c
  gameRandomGen :: Type.GameState -> System.Random.StdGen
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U(U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds3 }) -}
8281b47d2a415f5b18dac47c7056459c
  gameResult :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds5 }) -}
57cf999e48f69907f6f48e204fc28336
  getCell ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> Type.Cell
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 GHC.List.$w!!
                   @ Type.Cell
                   (GHC.List.$w!! @ Type.Line field ww3)
                   ww1 } }) -}
5be55909eb742937d7b0fd5d40ef1f23
  getCellColor ::
    Type.Cell -> Graphics.Gloss.Internals.Data.Color.Color
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds3 }) -}
e1894231b9d7467e069e417f84ccd8d5
  getCellLine :: Type.Cell -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: Type.Cell) ->
                 case c of wild { Type.Cell ds ds1 ds2 ds3 -> ds }) -}
af277a1c1243b9128d1aa7d46943ead9
  getCellType :: Type.Cell -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds3 }) -}
e2aa2201d8d99bcc9ae51c2a5011c9c6
  higherCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$whigherCell ww6 ww2 w1 } }) -}
c99968c45e58a5e2b97b8f9ec817dc49
  leftCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wleftCell ww1 ww6 w1 } }) -}
aa57665d8bd16abfda09769e2dd16c74
  lowerCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U(U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wlowerCell ww6 ww2 w1 } }) -}
693a957935306442d057f0c8a080bc19
  mapField :: (Type.Cell -> Type.Cell) -> Type.Field -> Type.Field
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
db0442796b59a89043cb38ae78e9fe0a
  mapLine :: (Type.Cell -> Type.Cell) -> Type.Line -> Type.Line
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
7b5eee64e5cfbdf155913fb8f6b52292
  numCell :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds2 }) -}
7b5eee64e5cfbdf155913fb8f6b52292
  numLine :: Type.Cell -> GHC.Types.Int
  RecSel Left Type.Cell
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.Cell) ->
                 case ds of wild { Type.Cell ds1 ds2 ds3 ds4 -> ds1 }) -}
8281b47d2a415f5b18dac47c7056459c
  numLoop :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds10 }) -}
0da0f3c453f0bbab689dfd89dfe295d8
  rightCell :: Type.Cell -> Type.Field -> GHC.Maybe.Maybe Type.Cell
  {- Arity: 2,
     Strictness: <S(LS(S)LL),1*U(1*U(U),1*U(1*U),A,A)><L,1*U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: Type.Field) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Type.$wrightCell ww1 ww6 w1 } }) -}
8281b47d2a415f5b18dac47c7056459c
  rotateTypeFigure :: Type.GameState -> GHC.Types.Int
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds9 }) -}
f7a6c7bc3b1b2066a5a167437cb20c59
  typeCellFromField ::
    Type.Field -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 3, Strictness: <S,1*U><S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (field :: Type.Field)
                   (x :: GHC.Types.Int)
                   (y :: GHC.Types.Int) ->
                 case y of ww { GHC.Types.I# ww1 ->
                 case x of ww2 { GHC.Types.I# ww3 ->
                 case GHC.List.$w!!
                        @ Type.Cell
                        (GHC.List.$w!! @ Type.Line field ww3)
                        ww1 of wild { Type.Cell ds ds1 ds2 ds3 ->
                 ds2 } } }) -}
8281b47d2a415f5b18dac47c7056459c
  userName :: Type.GameState -> GHC.Base.String
  RecSel Left Type.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Type.GameState) ->
                 case ds of wild { Type.GameState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds1 }) -}
instance GHC.Show.Show [Type.Cell] = Type.$fShowCell
instance GHC.Show.Show [Type.GameState] = Type.$fShowGameState
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

