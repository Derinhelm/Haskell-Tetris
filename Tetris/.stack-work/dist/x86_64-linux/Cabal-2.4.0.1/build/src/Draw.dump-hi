
==================== FINAL INTERFACE ====================
2019-03-20 13:22:42.415003146 UTC

interface project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an:Draw 8063
  interface hash: f1cd7e85e7fc022ed52bfc35364ff755
  ABI hash: e827216931acb380c8e25cdb3578a324
  export-list hash: 551067e2732157ecbd258059c1ba69cc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b176a7fae7e4488ae62dd9b3f12b8417
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Draw.drawCell
  Draw.drawFigure
  Draw.drawGame
  Draw.drawLine
  Draw.drawResult
  Draw.objects
  Draw.pictureField
module dependencies: Constans Type
package dependencies: GLURaw-2.0.0.4 GLUT-2.7.0.14
                      ObjectName-1.1.0.1 OpenGL-3.0.2.2 OpenGLRaw-3.3.2.0
                      StateVar-1.1.1.1 array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      fixed-0.2.1.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 gloss-1.13.0.1
                      gloss-rendering-1.13.0.2 half-0.3 integer-gmp-1.0.2.0
                      pretty-1.1.3.6 random-1.1 stm-2.5.0.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2
orphans: stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic text-1.2.3.1:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type half-0.3:Numeric.Half
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Real f7dad82c1d43d80823865d3e6c6636e0
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  gloss-1.13.0.1:Graphics.Gloss dc3d422d35cd32353ee5470deb98e8ac
import  -/  gloss-1.13.0.1:Graphics.Gloss.Data.Color 63b215a24677775cb457045312664a10
import  -/  gloss-1.13.0.1:Graphics.Gloss.Data.Picture dfdd7bdaa58e50073d0e7acd8f32d783
import  -/  gloss-rendering-1.13.0.2:Graphics.Gloss.Internals.Data.Color 2716426e7777628bb37f6a888abf7b9e
import  -/  gloss-rendering-1.13.0.2:Graphics.Gloss.Internals.Data.Picture 82e16028b6e02fb465dc928e7e9197a2
import  -/  Constans a86110f4ae3d5dc6d3d2ae46296ba4f0
  exports: 6b7c9b4c14c288940915583ecccaa9cb
import  -/  Type 66da883b5513e822d5e6553c4386bfac
  exports: f2deaed13c34578ab3aeb611e8a17f3a
  Cell a490fb91284b41c392b2e9ae69e56c0f
  Cell ce69d132984f15c162cb28e115878ea4
  Field cff2286d27e6392df8d5af5cd3f4b99a
  GameState db2dd883404c1975aa8e3deb66b73c47
  GameState f2f46b54669258b02928e2e0f3f586b3
  Line bec16fc1c01d7327740e42f85f13dafe
  NumberFigure ee576e2d2b8f44f9596901e8945ba26f
import  -/  random-1.1:System.Random 8c06dce30a9b8b4f2b7c15fb3f418e08
962909d598b21745e89c4acee9ed264d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Draw.$trModule3 Draw.$trModule1) -}
87475330373f9cd655623b9cea8ca695
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Draw.$trModule2) -}
d1943adf7c00a748b9415a30cd818319
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Draw"#) -}
3c56ce4feab8cf41ab2355f444301ef2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Draw.$trModule4) -}
996900a72408c098a1c411236f0a225f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("project-template-0.0.0.0-HkCShUnfJdZ4nPO3MEi7an"#) -}
14c46b3604d16e8871e350884d163050
  drawCell ::
    Type.Cell
    -> GHC.Types.Bool -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 2, Strictness: <S,1*U(1*U(U),1*U(U),A,U)><S,1*U>m12,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Cell) (w1 :: GHC.Types.Bool) ->
                 case w of ww { Type.Cell ww1 ww2 ww3 ww4 ->
                 case w1 of wild {
                   GHC.Types.False
                   -> Graphics.Gloss.Internals.Data.Picture.Translate
                        (case ww2 of wild1 { GHC.Types.I# i ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat#
                              50.0#
                              (GHC.Prim.minusFloat# (GHC.Prim.int2Float# i) 6.0#)) })
                        (case ww1 of wild1 { GHC.Types.I# i ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat#
                              50.0#
                              (GHC.Prim.minusFloat# (GHC.Prim.int2Float# i) 7.0#)) })
                        (Graphics.Gloss.Internals.Data.Picture.Color ww4 Draw.drawCell4)
                   GHC.Types.True
                   -> Graphics.Gloss.Internals.Data.Picture.Translate
                        (case ww2 of wild1 { GHC.Types.I# i ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat#
                              50.0#
                              (GHC.Prim.minusFloat# (GHC.Prim.int2Float# i) 6.0#)) })
                        (case ww1 of wild1 { GHC.Types.I# i ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat#
                              50.0#
                              (GHC.Prim.minusFloat# (GHC.Prim.int2Float# i) 7.0#)) })
                        Draw.drawCell1 } }) -}
8c709f378f90fd67cfd5d95867a3ccd4
  drawCell1 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.black
                   Draw.drawCell2) -}
95dca3bb116edb691b33de558ad2478b
  drawCell2 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Draw.drawCell3
                        Draw.drawCell3 of ww { (#,#) ww1 ww2 ->
                 Graphics.Gloss.Internals.Data.Picture.Line
                   (GHC.Base.++_$s++
                      @ (GHC.Types.Float, GHC.Types.Float)
                      (GHC.Types.:
                         @ (GHC.Types.Float, GHC.Types.Float)
                         ww1
                         (GHC.Types.[] @ (GHC.Types.Float, GHC.Types.Float)))
                      ww1
                      ww2) }) -}
45c50e30951df4b77d3ecc8deb8d610e
  drawCell3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 50.0#) -}
bf06713603e60926ffbe99e04f011faa
  drawCell4 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Draw.drawCell5) -}
f9c8df7bae509282560880868df9cebe
  drawCell5 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Draw.drawCell3
                        Draw.drawCell3 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
974d90d800d0888daf1cb525ef8cbf2f
  drawFigure ::
    Type.NumberFigure -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Type.NumberFigure) -> Draw.drawFigure1) -}
347145013434fc06db8dc7f10802ac9e
  drawFigure1 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Draw.drawFigure2) -}
5f33e65786c4a65e76cc08f55e5a4d50
  drawFigure2 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Draw.drawFigure4
                        Draw.drawFigure3 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
e6c230cff6f9f89c9650b7656fbce204
  drawFigure3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 20.0#) -}
75eaf70b6c0075f4501f36583f46e15b
  drawFigure4 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 10.0#) -}
c2b2599f1a0d32f597bac439a77931b9
  drawGame ::
    Type.GameState -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S,1*U(1*U,A,A,A)>m15, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Type.GameState) ->
                 case w of ww { Type.GameState ww1 ww2 ww3 ww4 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures
                   (GHC.Base.augment
                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                      (\ @ b
                         (c :: Graphics.Gloss.Internals.Data.Picture.Picture
                               -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         @ b
                         c
                         n
                         (Draw.pictureField ww1 GHC.Types.False))
                      (GHC.Types.:
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         Draw.drawFigure1
                         (GHC.Types.:
                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                            Draw.drawFigure1
                            (GHC.Types.[]
                               @ Graphics.Gloss.Internals.Data.Picture.Picture)))) }) -}
00feccdfa705e5766ae2e535701b04ee
  drawLine ::
    Type.Line
    -> GHC.Types.Bool
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
74e70a3bb84077865167a3150eb0dcdf
  drawResult ::
    GHC.Types.Int -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int) -> Draw.drawFigure1) -}
8e158f01acf21384e56a668fceea5195
  objects ::
    GHC.Types.Float
    -> GHC.Types.Float
    -> Graphics.Gloss.Internals.Data.Color.Color
    -> GHC.Types.Bool
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,U><S,1*U>m12,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Types.Float)
                   (w1 :: GHC.Types.Float)
                   (w2 :: Graphics.Gloss.Internals.Data.Color.Color)
                   (w3 :: GHC.Types.Bool) ->
                 case w3 of wild {
                   GHC.Types.False
                   -> Graphics.Gloss.Internals.Data.Picture.Translate
                        (case w1 of wild1 { GHC.Types.F# x ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat# 50.0# (GHC.Prim.minusFloat# x 6.0#)) })
                        (case w of wild1 { GHC.Types.F# x ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat# 50.0# (GHC.Prim.minusFloat# x 7.0#)) })
                        (Graphics.Gloss.Internals.Data.Picture.Color w2 Draw.drawCell4)
                   GHC.Types.True
                   -> Graphics.Gloss.Internals.Data.Picture.Translate
                        (case w1 of wild1 { GHC.Types.F# x ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat# 50.0# (GHC.Prim.minusFloat# x 6.0#)) })
                        (case w of wild1 { GHC.Types.F# x ->
                         GHC.Types.F#
                           (GHC.Prim.timesFloat# 50.0# (GHC.Prim.minusFloat# x 7.0#)) })
                        Draw.drawCell1 }) -}
923a535af507b3ce42ed3d2bd96f86ad
  pictureField ::
    Type.Field
    -> GHC.Types.Bool
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

